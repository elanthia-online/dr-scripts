=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#check-symbiosis
=end

custom_require.call(%w[common common-arcana drinfomon spellmonitor])

class SymbiosisCheck

  def initialize
    arg_definitions = [
      [
        {
          name: 'symbiosis_type',
          optional: true,
          options: %w[activate avoid cast discern endure examine explore harness harvest heal impress learn perform remember resolve spell spring strengthen watch],
          description: "Which symbiosis do you want to check? Argument -> Yaml -> defaults to harness"
        }
      ]
    ]
    args = DRC.parse_args(arg_definitions)

    symbiosis_type = args.symbiosis_type || get_settings.symbiotic_research_type || 'harness'
    validate_known_feat_for_symbiosis(symbiosis_type)
    research_symbiosis(symbiosis_type)
  end

  def research_symbiosis(new_symbiosis)
    current_symbiosis = DRCA.perc_symbiotic_research

    # is the correct symbiotic research already up?
    if current_symbiosis.downcase != new_symbiosis.downcase
      # wrong symbiotic research is active, release it
      if current_symbiosis
        DRC.message("Wrong symbiotic research active, correcting")
        DRC.message("Releasing: #{current_symbiosis}")
        DRCA.release_magical_research
      end
      DRC.message("Researching: #{new_symbiosis}")
      DRC.wait_for_script_to_complete('researcher', ['symbiosis', new_symbiosis])
    else
      DRC.message("Symbiotic research for '#{new_symbiosis}' is already active")
    end
  end

  def validate_known_feat_for_symbiosis(symbiosis_type)
    feat_type = get_feat_for_symbiosis(symbiosis_type)

    if feat_type.nil?
      DRC.message("Unknown symbiosis type: #{symbiosis_type}")
      DRC.message("To add support for this symbiosis, please submit an issue on GitHub:")
      DRC.message("https://github.com/rpherbig/dr-scripts/issues")
      exit
    end

    # check that you have the correct spell feat
    if !DRSpells.known_feats[feat_type]
      DRC.message("You don't know the '#{feat_type}' feat for '#{symbiosis_type}' symbiosis")
      DRC.message("See https://elanthipedia.play.net/Magical_feats for more info")
      exit
    end
  end

  def get_feat_for_symbiosis(symbiosis_type)
    # different feats needed for different types
    feat_for_symbioses = {
      'Symbiotic Research' => ['activate', 'case', 'harness'],
      'Mental Matrices' => ['discern', 'impress', 'remember', 'resolve'],
      'Physical Matrices' => ['avoid', 'endure', 'spring', 'strengthen'],
      'Scholar' => ['examine', 'learn', 'perform'],
      'Survivalist' => ['explore', 'harvest', 'heal', 'watch']
    }
    # which feat is needed?
    feat_for_symbioses
      .select { |feat, symbioses| symbioses.include?(symbiosis_type.downcase) }
      .map { |feat, symbioses| feat }
      .first
  end
end

SymbiosisCheck.new
