=begin
  Documentation: https://elanthipedia.play.net/Lich_script_development#buff
=end

custom_require.call(%w[common common-arcana])

class Waggle
  def initialize
    arg_definitions = [
      [
        { name: 'set', regex: /(set=(\w+))/, optional: true, description: 'list of defined spell sets' },
        { name: 'list', regex: /list/, optional: true, description: 'list of defined spell sets' },
        { name: 'spells', regex: /\w+/, optional: true, description: 'Spell list to use, otherwise default' },
        { name: 'force', regex: /force/i, optional: true, description: 'Recast spells even if currently active' },
        { name: 'strict', regex: /strict/i, optional: true, description: 'Keep trying to cast buffs until they stick. BE CAREFUL' }
      ]
    ]

    args = parse_args(arg_definitions)
    settings = get_settings

    if (args.set)
      set = args.set.split('=')[1]
      DRC.message("Spells under Waggle set \"#{set}\"")
      settings.waggle_sets[set].each_key do |key|
        DRC.message(" - #{key}")
      end
      exit
    end

    if (args.list)
      DRC.message("Waggle Sets Available")
      settings.waggle_sets.each_key do |key|
        DRC.message(" - #{key}")
      end
      exit
    end

    setname = args.spells || 'default'

    unless settings.waggle_sets[setname]
      DRC.message("No waggle set found for name: #{setname}")
      exit
    end

    if args.force
      settings.waggle_sets[setname].values.each do |spell_data|
        spell_data['recast'] = 99 # force spell to be recast
      end
    end

    if args.strict
      until (settings.waggle_sets[setname].keys - DRSpells.active_spells.keys).empty?
        DRCA.do_buffs(settings, setname)
      end
    else
      DRCA.do_buffs(settings, setname)
    end
  end
end

Waggle.new
