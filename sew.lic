=begin
  Documentation: https://elanthipedia.play.net/mediawiki/index.php/Lich_script_development#sew
=end

custom_require.call(%w(common common-crafting common-items common-money common-travel))

class Sew
  include DRC
  include DRCC
  include DRCI
  include DRCM
  include DRCT

  def initialize
    settings = get_settings
    @bag = settings.crafting_container('backpack')
    @belt = settings.tailoring_belt(nil)

    arg_definitions = [
      [
        { name: 'finish', options: %w(log stow trash), description: 'What to do with the finished item.' },
        { name: 'type', options: %w(knitting sewing leather), description: 'What tailoring type is this item.' },
        { name: 'chapter', regex: /\d+/i, variable: true, description: 'Chapter containing the item.' },
        { name: 'recipe_name', display: 'recipe name', regex: /^[A-z\s]+$/i, variable: true, description: 'Name of the recipe, wrap in double quotes if this is multiple words.' },
        { name: 'noun', regex: /\w+/i, variable: true },
        { name: 'material', regex: /\w+/i, variable: true, optional: true, description: 'Type of material for leather recipes.' }
      ],
      [
        { name: 'seal', regex: /seal/i }
      ],
      [
        { name: 'reinforce', regex: /reinforce/i }
      ]
    ]

    args = parse_args(arg_definitions)

    @finish = args.finish
    @chapter = args.chapter
    @recipe_name = args.recipe_name
    @noun = args.noun
    @mat_type = args.material

    Flags.add('sew-assembly', 'another finished \S+ shield (handle)', 'another finished wooden (hilt|haft)', 'another finished (long|short|small|large) leather (cord|backing)', 'another finished (small|large) cloth (padding)', 'another finished (long|short) wooden (pole)')
    Flags.add('sew-pins', 'The pins is all used up, so you toss it away.')

    if args.type == 'knitting'
      knit
    elsif args.type == 'sewing'
      sew
    elsif args.type == 'leather'
      leather
    elsif args.seal
      seal
    elsif args.reinforce
      reinforce
    else
      echo('Sew does not yet support that form of tailoring.')
    end
  end

  def get_item(name)
    get_crafting_item(name, @belt)
  end

  def stow_item(name)
    @bag = "other #{@bag}" unless stow_crafting_item(name, @bag, @belt)
  end

  def turn_to(section)
    bput("turn my book to #{section}", 'You turn your', 'The book is already')
  end

  def check_thread
    return if 'You tap' == bput('tap my cotton thread', 'You tap', 'I could not')
    ensure_copper_on_hand(1000)
    order_item(16_667, 6)
    stow_item('cotton thread')
  end

  def check_pins
    return unless Flags['sew-pins']
    ensure_copper_on_hand(125)
    order_item(16_668, 5)
    stow_item('pin')
  end

  def leather
    check_thread
    get_item('tailoring book')
    turn_to("page #{find_recipe(@chapter, @recipe_name)}")
    bput('study my book', 'Roundtime')
    stow_item('book')
    get_item("#{@mat_type} leather")
    get_item('scissors')
    do_sew('cut my leather with my scissors')
  end

  def sew
    check_thread
    get_item('tailoring book')
    turn_to("page #{find_recipe(@chapter, @recipe_name)}")
    bput('study my book', 'Roundtime')
    stow_item('book')
    get_item('cloth')
    get_item('scissors')
    do_sew('cut my cloth with my scissors')
  end

  def knit
    get_item('tailoring book')
    turn_to("page #{find_recipe(@chapter, @recipe_name)}")
    bput('study my book', 'Roundtime')
    stow_item('book')
    get_item('knitting needle')
    fput('swap') unless checkright =~ /needle/i
    get_item('wool yarn')
    do_knit('knit my yarn with my needles')
  end

  def seal
    Flags.add('sealing-done', 'shows improved signs of durability and wear resistance from the successful sealing process')
    get_item('tailoring book')
    turn_to("page #{find_recipe(1, ': tailored armor sealing')}")
    bput('study my book', 'Roundtime')
    stow_item('book')
    do_seal(true)
  end

  def reinforce
    check_thread
    get_item('tailoring book')
    turn_to("page #{find_recipe(1, ': tailored armor reinforcing')}")
    bput('study my book', 'Roundtime')
    stow_item('book')
    get_item('scissors')
    @noun = checkright
    do_sew("cut my #{@noun} with my scissors")
  end

  def assemble_part
    while Flags['sew-assembly']
      part = Flags['sew-assembly'][1..-1].join('.')
      Flags.reset('sew-assembly')
      stow_item(checkleft)
      get_item(part)
      bput("assemble my #{@noun} with my #{part}", 'affix it securely in place', 'and tighten the pommel to secure it', 'carefully mark where it will attach when you continue crafting')
      waitrt?
      get_item('sewing needles')
    end
  end

  def do_seal(wax)
    waitrt?
    return if Flags['sealing-done']
    if wax
      get_item('sealing wax')
      bput("apply my wax to my #{checkright}", 'roundtime')
      waitrt?
      stow_item('wax')
    else
      get_item('slickstone')
      bput("rub my #{checkright} with my slickstone", 'roundtime')
      waitrt?
      stow_item('slickstone')
    end

    do_seal !wax
  end

  def do_sew(command)
    waitrt?
    check_pins
    assemble_part
    next_command = "push my #{@noun} with my needles"
    case bput(command,
              'dimensions appear to have shifted and could benefit from some remeasuring',
              'With the measuring complete, now it is time to cut away more',
              'and could use some pins to',
              'deep crease develops along', 'wrinkles from all the handling and could use',
              'The needles need to have thread put on them before they can be used for sewing',
              'needs holes punched', 'requires some holes punched',
              'You realize that cannot be repaired', 'not damaged enough to warrant repair',
              'appears ready to be reinforced with some large cloth padding',
              'Roundtime')
    when 'dimensions appear to have shifted and could benefit from some remeasuring'
      stow_item(checkleft)
      fput('stow my cloth') if command == 'cut my cloth with my scissors'
      get_item('yardstick')
      next_command = "measure my #{@noun} with my yardstick"
    when 'With the measuring complete, now it is time to cut away more'
      stow_item(checkleft)
      fput('stow my cloth') if command == 'cut my cloth with my scissors'
      get_item('scissors')
      next_command = "cut my #{@noun} with my scissors"
    when 'and could use some pins to'
      stow_item(checkleft)
      fput('stow my cloth') if command == 'cut my cloth with my scissors'
      get_item('pins')
      next_command = "poke my #{@noun} with my pins"
    when 'deep crease develops along', 'wrinkles from all the handling and could use'
      stow_item(checkleft)
      fput('stow my cloth') if command == 'cut my cloth with my scissors'
      get_item('slickstone')
      next_command = "rub my #{@noun} with my slickstone"
    when 'The needles need to have thread put on them before they can be used for sewing'
      item = checkleft
      stow_item(item)
      fput('stow my cloth') if command == 'cut my cloth with my scissors'
      get_item('cotton thread')
      fput('put thread on my sewing needles')
      get_item(item)
    when 'needs holes punched', 'requires some holes punched'
      stow_item(checkleft)
      fput('stow my cloth') if command == 'cut my cloth with my scissors'
      get_item('awl')
      next_command = "poke my #{@noun} with my awl"
    when 'You realize that cannot be repaired', 'not damaged enough to warrant repair'
      stow_item(checkleft)
      finish
    when 'appears ready to be reinforced with some large cloth padding'
      stow_item(checkleft)
      get_item('large padding')
      bput("assemble my #{@noun} with my padding", 'carefully mark where it will attach when you continue crafting')
      case bput("analy my #{@noun}", 'needle and thread', 'pinning', 'slickstone', 'remeasuring', 'scissor')
      when 'needle and thread'
        get_item('sewing needles')
      when 'pinning'
        get_item('pins')
        next_command = "poke my #{@noun} with my pins"
      when 'slickstone'
        get_item('slickstone')
        next_command = "rub my #{@noun} with my slickstone"
      when 'remeasuring'
        get_item('yardstick')
        next_command = "measure my #{@noun} with my yardstick"
      when 'scissor'
        get_item('scissors')
        next_command = "cut my #{@noun} with my scissors"
      end
    when 'Roundtime'
      stow_item(checkleft)
      fput('stow my cloth') if command == 'cut my cloth with my scissors'
      get_item('sewing needles')
    end
    do_sew(next_command)
  end

  def do_knit(command)
    waitrt?
    next_command = 'knit my needles'
    case bput(command,
              'Now the needles must be turned', 'Some ribbing should be added',
              'Next the needles must be pushed', 'ready to be pushed',
              'The garment is nearly complete and now must be cast off',
              'You are already knitting',
              'Roundtime',
              'That tool does not seem suitable for that task.',
              'You need a larger amount of material')
    when 'Now the needles must be turned', 'Some ribbing should be added'
      next_command = 'turn my needles'
    when 'Next the needles must be pushed', 'ready to be pushed'
      next_command = 'push my needles'
    when 'The garment is nearly complete and now must be cast off'
      cast_and_finish
    when 'You are already knitting'
      bput('pull my needles', 'Do you really want to discard')
      bput('pull my needles', 'You untie and discard')
      do_knit(command)
      next_command = ''
    when 'That tool does not seem suitable for that task.'
      case bput('analyze my needles', 'is in need of more knitting.', 'The needles need to be turned', 'Some purl stitching is', 'needles must be cast')
      when 'is in need of more knitting.'
        next_command = 'knit my needles'
      when 'The needles need to be turned'
        next_command = 'turn my needles'
      when 'Some purl stitching is'
        next_command = 'push my needles'
      when 'needles must be cast'
        cast_and_finish
      end
    when 'You need a larger amount of material'
      echo '***STATUS*** CANNOT CRAFT, NEED MORE MATERIAL'
      exit
    end
    waitrt?
    stow_item('yarn') if checkleft =~ /yarn/i
    do_knit(next_command)
  end

  def cast_and_finish
    bput('cast my needles', 'roundtime')
    pause 1
    waitrt?
    stow_item('needles')
    finish
  end

  def finish
    if @stamp
      get_item('stamp')
      fput("mark my #{@noun} with my stamp")
      pause
      waitrt?
      stow_item('stamp')
    end
    case @finish
    when /log/
      logbook_item
    when /stow/
      stow_item(@noun)
    when /trash/
      dispose_trash(@noun)
    end
    exit
  end

  def logbook_item
    get_item('outfitting logbook')
    if /requires items of/ =~ bput("bundle my #{@noun} with my logbook", 'You notate the', 'This work order has expired', 'The work order requires items of a higher quality')
      dispose_trash(@noun)
    end
    stow_item('outfitting logbook')
  end
end

Sew.new
