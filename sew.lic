=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#sew
=end

custom_require.call(%w[common common-arcana common-crafting common-items common-money common-travel events])

class Sew
  def initialize
    @settings = get_settings
    @hometown = @settings.force_crafting_town || @settings.hometown
    @worn_trashcan = @settings.worn_trashcan
    @worn_trashcan_verb = @settings.worn_trashcan_verb
    @bag = @settings.crafting_container
    @bag_items = @settings.crafting_items_in_container
    @belt = @settings.outfitting_belt
    @stamp = @settings.mark_crafted_goods

    arg_definitions = [
      [
        { name: 'finish', options: %w[hold log stow trash], description: 'What to do with the finished item.' },
        { name: 'type', options: %w[knitting sewing leather], description: 'What tailoring type is this item.' }, # no longer in use, being removed next edit. Have to change the calls from other scripts.
        { name: 'chapter', regex: /\d+/i, variable: true, description: 'Chapter containing the item.' },
        { name: 'recipe_name', display: 'recipe name', regex: /^[A-z\s\-']+$/i, variable: true, description: 'Name of the recipe, wrap in double quotes if this is multiple words.' },
        { name: 'material', regex: /\w+/i, variable: true, description: 'Type of material to use.' },
        { name: 'noun', regex: /\w+/i, variable: true, description: 'Noun of item being crafted' },
        { name: 'skip', regex: /skip/i, optional: true, description: 'Optional setting to skip restocking consumables if low (wax/pins/thread)' }
      ],
      [
        { name: 'finish', options: %w[hold stow], description: 'What to do with the finished item.' },
        { name: 'instructions', regex: /instructions/i, description: 'Instructions if using instructions' },
        { name: 'material', regex: /\w+/i, variable: true, description: 'Type of material to use.' },
        { name: 'noun', regex: /\w+/i, variable: true, description: 'Noun of item being crafted' },
        { name: 'knit', regex: /^knit/i, optional: true, description: 'tells sew to do knitting routine' },
        { name: 'skip', regex: /skip/i, optional: true, description: 'Optional setting to skip restocking consumables if low (glue/stain)' }
      ],
      [
        { name: 'recipe_name', display: 'enhancement', options: %w[seal reinforce lighten], description: 'Enhancements to crafted armor/shields' },
        { name: 'noun', regex: /\w+/i, variable: true, description: 'Noun of item being enhanced.' }
      ],
      [
        { name: 'resume', regex: /resume/i },
        { name: 'noun', regex: /\w+/i, variable: true, description: 'Noun of item to resume.' }
      ]
    ]

    args = parse_args(arg_definitions)

    @finish = args.finish
    args.recipe_name.sub!('lighten', 'tailored armor lightening')
    args.recipe_name.sub!('seal', 'tailored armor sealing')
    args.recipe_name.sub!('reinforce', 'tailored armor reinforcing')
    @recipe_name = args.recipe_name
    @cube = @settings.cube_armor_piece
    @noun = args.noun
    @knit = args.knit
    @mat_type = args.material
    @chapter = args.chapter.nil? ? 1 : args.chapter.to_i # chapter 5 for enhancements
    @info = get_data('crafting')['tailoring'][@hometown]
    @instructions = args.instructions
    @cloth = %w[silk wool burlap cotton felt linen electroweave steelsilk arzumodine bourde dergatine dragonar faeweave farandine imperial jaspe khaddar ruazin titanese zenganne]

    DRC.wait_for_script_to_complete('buff', ['sew'])

    Flags.add('sew-assembly', 'ready to be .* with some (small|large) cloth (padding)', 'another finished \S+ shield (handle)', 'another finished wooden (hilt|haft)', 'another finished (long|short|small|large) leather (cord|backing)', 'another finished (small|large) cloth (padding)', 'another finished (long|short) wooden (pole)')
    Flags.add('sew-done', 'The .* shows improved', 'Applying the final touches', 'The .* shows a slightly reduced weight', /^You realize that cannot be repaired, and stop/)

    if args.resume
      if DRCI.in_hands?('knitting needles')
        @home_command = 'knit my needles'
        command = 'analyze my knitting needles'
      else
        check_hand(@noun) unless DRCI.in_left_hand?(@noun)
        @home_command = "analyze my #{@noun}"
        command = "analyze my #{@noun}"
      end
      work(command)
    end
    if @recipe_name.include?('seal')
      DRCC.check_consumables('wax', @info['tool-room'], 10, @bag, @bag_items, @belt) unless args.skip
    elsif @chapter != 5
      DRCC.check_consumables('pins', @info['tool-room'], 5, @bag, @bag_items, @belt) unless args.skip
      DRCC.check_consumables('thread', @info['stock-room'], 6, @bag, @bag_items, @belt) unless args.skip
    end

    work(prep)
  end

  def check_hand(item)
    if DRCI.in_right_hand?(item)
      DRC.bput('swap', 'You move', 'You have nothing')
    else
      DRC.message('***Please hold the item or material you wish to work on.***')
      magic_cleanup
      exit
    end
  end

  def prep
    DRCA.crafting_magic_routine(@settings)
    if @instructions
      DRCC.get_crafting_item("#{@noun} instructions", @bag, @bag_items, @belt)
      if /again/ =~ DRC.bput('study my instructions', 'Roundtime', 'Study them again')
        DRC.bput('study my instructions', 'Roundtime', 'Study them again')
      end
    elsif @settings.master_crafting_book
      DRCC.find_recipe2(@chapter, @recipe_name, @settings.master_crafting_book, 'tailoring')
    else
      DRCC.get_crafting_item('tailoring book', @bag, @bag_items, @belt)
      echo('*** You will need to upgrade to a journeyman or master book before 176 ranks! ***') if DRSkill.getrank('Engineering') == 175
      DRCC.find_recipe2(@chapter, @recipe_name)
      DRCC.stow_crafting_item('tailoring book', @bag, @belt)
    end

    if @chapter == 5 || @knit # knitting
      DRCC.get_crafting_item('yarn', @bag, @bag_items, @belt)
      check_hand('yarn') unless DRCI.in_left_hand?('yarn')
      swap_tool('knitting needles')
      @home_tool = 'knitting needles'
      @home_command = 'knit my needles'
      'knit my yarn with my knitting needles'
    elsif @recipe_name.include?('tailored armor') # enhancements
      @stamp = false
      check_hand(@noun) unless DRCI.in_left_hand?(@noun)
      if @recipe_name.include?('seal')
        swap_tool('sealing wax')
        @home_tool = 'sealing wax'
        @home_command = "apply my wax to my #{@noun}"
        "apply my wax to my #{@noun}"
      else
        swap_tool('scissors')
        @home_tool = 'scissors'
        @home_command = "cut my #{@noun} with my scissors"
        "cut my #{@noun} with my scissors"
      end
    elsif @cloth.include?(@mat_type) # any cloth products
      DRCC.get_crafting_item("#{@mat_type} cloth", @bag, @bag_items, @belt)
      check_hand('cloth') unless DRCI.in_left_hand?('cloth')
      swap_tool('scissors')
      @home_tool = 'sewing needles'
      @home_command = "push my #{@noun} with my needles"
      "cut my #{@mat_type} cloth with my scissors"
    else # any leather products
      DRCC.get_crafting_item("#{@mat_type} leather", @bag, @bag_items, @belt)
      check_hand('leather') unless DRCI.in_left_hand?('leather')
      swap_tool('scissors')
      @home_tool = 'sewing needles'
      @home_command = "push my #{@noun} with my needles"
      "cut my #{@mat_type} leather with my scissors"
    end
  end

  def assemble_part
    while Flags['sew-assembly']
      tool = DRC.right_hand
      DRCC.stow_crafting_item(tool, @bag, @belt)
      part = Flags['sew-assembly'].to_a[1..-1].join(' ')
      Flags.reset('sew-assembly')
      DRCC.get_crafting_item(part, @bag, @bag_items, @belt)
      DRC.bput("assemble my #{@noun} with my #{part}", 'affix it securely in place', 'and tighten the pommel to secure it', 'carefully mark where it will attach when you continue crafting')
      swap_tool(tool)
    end
  end

  def work(command)
    DRC.bput("touch my #{@cube}", /^Warm vapor swirls around your head in a misty halo/, /^A thin cloud of vapor manifests with no particular effect./, /^Touch what/) if @cube
    loop do
      DRCA.crafting_magic_routine(@settings)
      assemble_part
      result = DRC.bput(command,
                        'a slip knot in your yarn',
                        'A sufficient quantity of wax exists',
                        'A buildup of wax on .* must now be rubbed',
                        'and could use some pins to',
                        'cutting with some scissors',
                        'deep crease develops along',
                        'Deep creases and wrinkles in the fabric',
                        'dimensions appear to have shifted and could benefit from some remeasuring',
                        'dimensions changed while working on it',
                        'Do you really want to discard',
                        'I could not find what you were',
                        'Ingredients can be added',
                        'is in need of pinning to help arrange the material for further sewing',
                        'need to be turned',
                        'needs holes punched',
                        'New seams must now be sewn to properly fit the lightened material together',
                        'Next the needles must be pushed',
                        'Nothing obstructs the fabric from continued sewing',
                        'now needs some sealing wax applied',
                        'Now the needles must be turned',
                        'pushing it with a needle and thread',
                        'ready to be pushed',
                        'requires some holes punched',
                        'scissor cuts',
                        'Sealing wax now encases the material',
                        'Some purl stitching is',
                        'Some ribbing should be added',
                        'The garment is nearly complete and now must be cast off',
                        'The needles need to have thread put on them before they can be used for sewing',
                        'What were you referring',
                        'With the measuring complete',
                        'wrinkles from all the handling and could use',
                        'You are already knitting',
                        'You carefully thread some cotton thread',
                        'You must assemble',
                        'You need another',
                        'You untie and discard',
                        /^Roundtime/,
                        /^You realize that cannot be repaired, and stop/)
      case result
      when 'dimensions appear to have shifted and could benefit from some remeasuring', 'dimensions changed while working on it'
        swap_tool('yardstick')
        @home_tool = 'sewing needles'
        @home_command = "push my #{@noun} with my sewing needles"
        command = "measure my #{@noun} with my yardstick"
      when 'With the measuring complete', 'cutting with some scissors', 'scissor cuts'
        swap_tool('scissors')
        command = "cut my #{@noun} with my scissors"
      when 'and could use some pins to', 'is in need of pinning to help arrange the material for further sewing'
        swap_tool('pins', true)
        command = "poke my #{@noun} with my pins"
      when 'deep crease develops along', 'wrinkles from all the handling and could use', 'Deep creases and wrinkles in the fabric'
        swap_tool('slickstone')
        command = "scrape my #{@noun} with my slickstone"
      when 'The needles need to have thread put on them before they can be used for sewing'
        swap_tool('cotton thread', true)
        command = 'put thread on my sewing needles'
      when 'You carefully thread some cotton thread'
        swap_tool('sewing needles')
        command = "push my #{@noun} with my sewing needles"
      when 'What were you referring', 'I could not find what you were'
        DRC.bput('stow feet', 'You put', 'Stow what')
        if command.include?('wax')
          DRCC.check_consumables('wax', @info['tool-room'], 10, @bag, @bag_items, @belt)
          swap_tool('wax')
        elsif command.include?('pins')
          DRCC.check_consumables('pins', @info['tool-room'], 5, @bag, @bag_items, @belt)
          swap_tool('pins')
        elsif command.include?('thread')
          DRCC.check_consumables('thread', @info['stock-room'], 6, @bag, @bag_items, @belt)
          swap_tool('thread')
        end
      when 'needs holes punched', 'requires some holes punched'
        @home_tool = 'sewing needles'
        @home_command = "push my #{@noun} with my sewing needles"
        swap_tool('awl')
        command = "poke my #{@noun} with my awl"
      when 'New seams must now be sewn to properly fit the lightened material together'
        @stamp = false
        @home_tool = 'scissors'
        @home_command = "cut my #{@noun} with my scissors"
        swap_tool('sewing needles')
        command = "push my #{@noun} with my sewing needles"
      when 'A sufficient quantity of wax exists', 'Sealing wax now encases the material', 'A buildup of wax on .* must now be rubbed'
        @stamp = false
        @home_tool = 'sealing wax'
        @home_command = "apply my wax to my #{@noun}"
        swap_tool('slickstone')
        command = "scrape my #{@noun} with my slickstone"
      when 'now needs some sealing wax applied'
        @home_tool = 'sealing wax'
        @home_command = "apply my wax to my #{@noun}"
        swap_tool('sealing wax', true)
        command = "apply my wax to my #{@noun}"
      when 'Nothing obstructs the fabric from continued sewing', 'pushing it with a needle and thread'
        @home_tool = 'sewing needles'
        @home_command = "push my #{@noun} with my sewing needles"
        swap_tool('sewing needles')
        command = "push my #{@noun} with my sewing needles"
      when 'Ingredients can be added', 'You must assemble', 'You need another'
        assemble_part
      when 'a slip knot in your yarn'
        DRCC.stow_crafting_item('yarn', @bag, @belt)
        command = 'knit my needles'
      when 'Now the needles must be turned', 'Some ribbing should be added', 'need to be turned'
        command = 'turn my needles'
      when 'Next the needles must be pushed', 'ready to be pushed', 'Some purl stitching is'
        command = 'push my needles'
      when 'The garment is nearly complete and now must be cast off'
        command = 'cast my needles'
      when 'You are already knitting', 'Do you really want to discard'
        command = 'pull my needles'
      when 'You untie and discard'
        command = 'knit my yarn with my knitting needles'
      when /^Roundtime/, /^You realize that cannot be repaired, and stop/
        finish if Flags['sew-done']
        swap_tool(@home_tool) unless @home_tool.nil?
        command = @home_command.nil? ? command : @home_command
      end
    end
  end

  def swap_tool(next_tool, skip = false)
    return if DRC.right_hand.include?(next_tool)

    DRCC.stow_crafting_item(DRC.right_hand, @bag, @belt)
    DRCC.get_crafting_item(next_tool, @bag, @bag_items, @belt, skip)
  end

  def finish
    if @stamp
      swap_tool('stamp', true)
      DRC.bput("mark my #{@noun} with my stamp", 'Roundtime')
      DRCC.stow_crafting_item('stamp', @bag, @belt)
    end

    DRCC.stow_crafting_item(DRC.right_hand, @bag, @belt)
    case @finish
    when /log/
      DRCC.logbook_item('outfitting', @noun, @bag)
    when /stow/
      DRCC.stow_crafting_item(@noun, @bag, @belt)
    when /trash/
      DRCI.dispose_trash(@noun, @worn_trashcan, @worn_trashcan_verb)
    when /hold/
      DRC.message("#{@noun} Complete")
    end
    DRC.bput('stow feet', 'You put', 'Stow what')
    magic_cleanup
    exit
  end
end

def magic_cleanup
  return if @settings.crafting_training_spells.empty?

  DRC.bput('release spell', 'You let your concentration lapse', "You aren't preparing a spell")
  DRC.bput('release mana', 'You release all', "You aren't harnessing any mana")
  DRC.bput('release symb', "But you haven't", 'You release', 'Repeat this command')
end

before_dying do
  Flags.delete('sew-assembly')
  Flags.delete('sealing-done')
end

Sew.new
