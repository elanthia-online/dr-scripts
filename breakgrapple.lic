custom_require.call(%w[common common-items])

class BreakGrapple

  include DRC
  include DRCI

  def initialize
    @equipment_manager = EquipmentManager.new
	
	@had_left = nil
	@had_right = nil
	
	@kissed = false
	
    ## Pause scripts that might get in the way
    pause_script("go2")
    pause_script("footwatch")
	pause_script('bailroom') if Script.running?('bailroom')

	fput('kneel') if not standing? and not kneeling?
    
	havoc if DRStats.bard?

    suplex
    alldone
  end
  
  def check_immob
    return if @kissed
	return if not standing?
	
	pause 0.5 while stunned?
	
    target = DRRoom.pcs.first
	loop do
	  case DRC.bput("exhale #{target}","You slowly and deliberately","You don't seem to be able to move","You blow")
	  when "You slowly and deliberately"
	    break
	  when "You don't seem to be able to move"
	    pause 1
	  when "You blow"
	    @kissed = true
	    break
	  end
	end
  end
  
  def alldone
    fput("get #{@had_right}") if @had_right
	fput("get #{@had_left}") if @had_left
	@equipment_manager.empty_hands

    stop_script('go2') if Script.running?('go2')
    stop_script("footwatch")
	start_script("footwatch")
	unpause_script("bailroom") if Script.running?('bailroom')
	pause 30
    exit
  end

  def dmrs
    fput('release') unless checkprep == "Demrris' Resolve"
	fput('prep dmrs 30') unless checkprep == "Demrris' Resolve"
	while checkcastrt > 10
	  fput('stand')
	  waitrt?
	  fput('shove')
	  waitrt?
	end
	fput('cast area')
  end
  
  def shove
    loop do
      fput('kneel') if not standing? and not kneeling?
      fput('stand') if not standing?
	  
      suplex if standing?
	  
	  dmrs if not standing? and DRStats.bard?
      case DRC.bput('shove',/breaking (his|her) grip on you/,/but (his|her) grip remains solid./,'You must be closer','You throw your weight',"but he doesn't budge","You don't seem to be able to move to do that","You shove","You try to shove","You slam your hands","You lean forward and shove")
      when /breaking (his|her) grip on you/
        alldone
      when /but (his|her) grip remains solid./
        waitrt?
        fput('circle') if standing?
      when 'You must be closer'
        alldone
      when "but he doesn't budge"
        alldone
      when "You don't seem to be able to move to do that"
        pause 0.25
      when "You try to shove", "You slam your hands", "You lean forward and shove"
        alldone
      end
      pause 0.5
      waitrt?
    
    end
  end

  def havoc
    waitrt?
    pause 0.5
    fput('scream havoc')
  end

  
  def clearhands
    if DRC.right_hand or DRC.left_hand
      @equipment_manager.empty_hands
      echo right_hand
      if right_hand
        item = right_hand
        fput('lob')
        
      end
    end
  end
  
  def suplex
    had_left = nil
	had_right = nil
	
	check_immob
	
    if right_hand || left_hand
      fput('stow left') if left_hand
	  fput('stow right') if right_hand
	  if left_hand
        @had_left = left_hand
        fput('lob left')
		waitrt?
      end
	  if right_hand
        @had_right = right_hand
        fput('lob')
		waitrt?
      end
    end
	
	
	
    case DRC.bput('maneuver suplex','You lean back and hoist','Perhaps you should break his grip on you','You must be standing','You must rest a bit longer','You must first be grappled with an enemy to do this.',"You don't seem to be able to move to do that","Your hands must be empty to deliver such a maneuver")
    when 'You lean back and hoist', 'You must first be grappled with an enemy to do this.'
      fput('stand') if not standing?
      alldone
    when 'Perhaps you should break his grip on you'
      shove
    when 'You must be standing'
      shove
    when "You don't seem to be able to move to do that"
      shove
	when "Your hands must be empty to deliver such a maneuver"
	  shove
	when "You must first be grappled with an enemy to do this"
	  alldone
    end
  end
  
end

BreakGrapple.new