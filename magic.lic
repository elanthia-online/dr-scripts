=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#attunement
=end
custom_require.call(%w[common common-arcana common-items common-money common-travel drinfomon equipmanager events spellmonitor])

class Magic
  include DRC
  include DRCA
  include DRCI
  include DRCM
  include DRCT
  
  def initialize
    settings = get_settings
    @stationary_skills_only = settings.crossing_training_stationary_skills_only
    @hometown = settings.hometown
    @attunement_rooms = settings.attunement_rooms
    main
  end
  
  def test
    if DRSkill.getxp("Utility") < 32
	  magic_utility
	elsif DRSkill.getxp("Augmentation") < 32
	  magic_augmentation
	elsif DRSkill.getxp("Warding") < 32
	  magic_warding
	else
	  abort!
	end
  end  

  def magic_augmentation
    prep_symb_aug
	prep_aug_spell
	harness_aug
	cast
  end
  
  def prep_symb_aug
    pause 1.0
	case bput("prep symb", "You should stop playing", "You recall", "But you've already")
    when "You should stop playing"
	  fput('stop play')
	  fput('prep symb')
	  pause 1.0
	  return
	when "You recall"
	  return
	when "But you've already"
	  return
	end
  end
  
  def prep_aug_spell
    pause 1.0
	case bput("prep mt 15", "You feel fully", "You should stop playing", "other", "You raise your palms skyward")
	when "You feel fully"
	  return
	when "other"
	  magic_augmentation
	when "You should stop playing"
	  fput('stop play')
	  fput('prep mt 15')
	  waitrt?
	  waitfor "You feel fully prepared to cast"
	  return
	when "You raise your palms skyward"
	  waitrt?
	  waitfor "You feel fully prepared to cast"
	  return
	end
  end
	
  def harness_aug
	case bput("harness 13", "You tap into the mana", "other")
	when "You tap into the mana"
	  return
	when "other"
	  harness_aug
	  return
	end
  end
	 
  def cast
    case bput("cast", "You feel more", "Your spell", "The world around you wavers briefly", "The world dulls", "The air around you")
    when "You feel"
      return
	when "Your Spell"
	  return
	when "The world around you wavers briefly"
	  return
	when "The world dulls"
	  return
	when "The air around you"
	  return
	end
  end
  

  
  	  
  def magic_warding
    prep_symb_ward
	prep_ward_spell
	harness_ward
	cast
  end
  
  def prep_symb_ward
    pause 1.0
	case bput("prep symb", "You should stop playing", "You recall", "But you've already")
    when "You should stop playing"
	  fput('stop play')
	  fput('prep symb')
	  pause 1.0
	  return
	when "You recall"
	  return
	when "But you've already"
	  return
	end
  end
  
  def prep_ward_spell
    pause 1.0
	case bput("prep maf 5", "You feel fully", "You should stop playing", "other", "You raise your palms skyward")
	when "You feel fully"
	  return
	when "other"
	  magic_ward
	when "You should stop playing"
	  fput('stop play')
	  fput('prep maf 5')
	  waitrt?
	  waitfor "You feel fully prepared to cast"
	  return
	when "You raise your palms skyward"
	  waitrt?
	  waitfor "You feel fully prepared to cast"
	  return
	end
  end
	
  def harness_ward
	case bput("harness 23", "You tap into the mana", "other")
	when "You tap into the mana"
	  return
	when "other"
	  harness_aug
	  return
	end
  end	
 
 
  def magic_utility
    prep_symb_utility
	prep_utility_spell
	harness_utility
	cast
  end
  
  def prep_symb_utility
    pause 1.0
	case bput("prep symb", "You should stop playing", "You recall", "But you've already")
    when "You should stop playing"
	  fput('stop play')
	  fput('prep symb')
	  pause 1.0
	  return
	when "You recall"
	  return
	when "But you've already"
	  return
	end
  end
  
  def prep_utility_spell
    pause 1.0
	case bput("prep pg 5", "You feel fully", "You should stop playing", "other", "You raise your palms skyward")
	when "You feel fully"
	  return
	when "other"
	  magic_ward
	when "You should stop playing"
	  fput('stop play')
	  fput('prep pg 5')
	  waitrt?
	  waitfor "You feel fully prepared to cast"
	  return
	when "You raise your palms skyward"
	  waitrt?
	  waitfor "You feel fully prepared to cast"
	  return
	end
  end
	
  def harness_utility
	case bput("harness 25", "You tap into the mana", "other")
	when "You tap into the mana"
	  return
	when "other"
	  harness_aug
	  return
	end
  end 
 
   
  
  def main
    loop do
	  test
	end
  end
 
end
# Call this last to avoid the need for forward declarations
$Magic = Magic.new
$Magic.main
	  