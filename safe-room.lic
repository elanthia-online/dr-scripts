=begin
  Documentation: https://elanthipedia.play.net/mediawiki/index.php/Lich_script_development#safe-room
=end

custom_require.call(%w(common common-money common-travel drinfomon events))

class SafeRoom
  include DRC
  include DRCM
  include DRCT

  def initialize
    settings = get_settings

    copper = settings.safe_room_tip_threshold || 4_000
    ensure_copper_on_hand(copper)

    if use_pc_empath?(settings.safe_room_id, settings.safe_room_empath)
      tip(settings.safe_room_tip_threshold, settings.safe_room_tip_amount, settings.safe_room_empath)
    elsif DRStats.empath?
      walk_to(settings.safe_room)
      wait_for_script_to_complete('healme')
    elsif !DRStats.necromancer?
      Flags.add('healthy', 'Dokt waves a large hand at you', 'Dokt gives you a quick glance')
      Flags.add('moved', 'grabs you and drags you')
      wait_at_empath
      fix_standing
    end

    give_and_take(settings.safe_room_id, settings.safe_room_give, settings.safe_room_take)
  end

  def wait_at_empath
    walk_to 6218
    unless Room.current.id == 6218
      beep
      beep
      echo 'ERROR Navigating to safe room'
      return
    end

    Flags.reset('healthy')
    Flags.reset('moved')
    timer = 0

    until Flags['healthy'] || Flags['moved']
      lie_down
      pause 1
      timer += 1
      if timer % 60 == 0
        # Output a harmless command to prevent being logged out
        fput 'tdp'
      end
    end

    wait_at_empath if Flags['moved']
  end

  def lie_down
    bput('lie', 'You lie') if checkstanding
  end

  def use_pc_empath?(room_id, empath)
    return unless room_id
    return unless empath

    walk_to room_id
    fput("listen to #{empath}")
    pause 45
  end

  def give_and_take(room_id, give_items, take_items)
    return unless room_id
    return unless give_items || take_items

    walk_to room_id
    give(give_items)
    take(take_items)
  end

  def tip(tip_threshold, tip_amount, empath)
    return unless tip_threshold
    return unless wealth > tip_threshold
    return unless tip_amount
    return unless empath

    minimize_coins(tip_amount).each do |amount|
      fput "give #{empath} #{amount}"
    end
  end

  def give(items)
    items.each do |item|
      loop do
        case bput("get my #{item}", 'You get', 'What were you referring')
        when 'You get'
          fput "drop #{item}"
        else
          break
        end
      end
    end
  end

  def take(items)
    items.each do |item|
      break unless stow?(item)
    end
  end

  def stow?(item)
    DRRoom.room_objs.grep(/#{item}/).each do |_|
      fput "stow #{item}"
      pause 1
      next unless [checkright, checkleft].include? item
      fput "drop #{item}"
      pause 1
      return false
    end

    true
  end
end

SafeRoom.new
