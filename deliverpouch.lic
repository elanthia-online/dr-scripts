custom_require.call(%w[drinfomon equipmanager events common common-travel])

class Deliverpouch
  include DRC
  include DRCT

  def initialize
    @pouchesDelivered=0
	@settings = get_settings
	@full_container = @settings.full_gem_pouch_container
	@spare_container = @settings.spare_gem_pouch_container
	@recip = "Baggerich"

	if should_deliver?
	  DRCT.walk_to(7931)
	  deliver_pouch
	end
	while should_deliver?
	  deliver_pouch
	end
	
	getmorepouches if @pouchesDelivered > 0
	
	EquipmentManager.new.empty_hands

  end

  def should_deliver?
    case bput("tap pouch in my #{@full_container}","You tap","What were you","I could not find")
	when "You tap"
	  return true
	end
	return false
  end
  
  def deliver_pouch
    case bput("get pouch from my #{@full_container}","You get","What were you","I could not find")
	when "You get"
	  delivered=false
	  case bput("give my pouch to #{@recip}","has accepted your offer")
	  when "has accepted your offer"
	    @pouchesDelivered = @pouchesDelivered + 1
		delivered=true
	  end
	  if not delivered
	    EquipmentManager.new.empty_hands
		exit
	  end
	end
  end
  
  def getmorepouches
    walk_to(4652)
	@pouchesDelivered.times do
	  fput('ask app for red pouch')
	  fput("put my pouch in my #{@spare_container}")
	end
  end

  
end

Deliverpouch.new