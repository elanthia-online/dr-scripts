=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#mech-lore
=end

custom_require.call(%w[common common-items drinfomon equipmanager])

class MechLore
  include DRC
  include DRCI

  def initialize
    @settings = get_settings
    @equipment_manager = EquipmentManager.new(@settings)

    @equipment_manager.wear_equipment_set?('standard')
    @equipment_manager.empty_hands
    @junk_timer = Time.now
    pause 1
    fput "remove #{@settings.hand_armor}"
    fput "stow #{@settings.hand_armor}"
    pause 1
    release_invisibility
    if @settings.braid_item
      braid_to_fail(@settings.braid_item)
    else
      braid_to_fail(DRSkill.getrank('Outdoorsmanship') < 110 ? 'grass' : 'vine')
    end
    @equipment_manager.empty_hands
    fput "get my #{@settings.hand_armor}"
    fput "wear my #{@settings.hand_armor}"
  end

  def dump_junk
    return unless @settings.dump_junk
    return unless Time.now - @junk_timer > 300
    return unless DRRoom.room_objs.size > @settings.dump_item_count

    bput('dump junk', 'You should just kick', 'You have marked this room', 'You cannot summon')
    @junk_timer = Time.now
  end

  def braid_to_fail(item)
    return if left_hand || right_hand
    return unless forage?(item)

    loop do
      waitrt?
      case bput("braid my #{item}", 'You need to have more', 'Roundtime', 'You need both hands to do that', 'You can\'t braid the .* into your braided', 'is already as long as you can make it', 'You are in no condition')
      when 'Roundtime'
        rt = reget(10, 'Roundtime').last.scan(/\d+/).first.to_i
        break if rt >= 8 || DRSkill.getxp('Mechanical Lore') >= 30
      when 'is already as long as you can make it'
        waitrt?
        break
      when 'You need both hands to do that', /into your braided/
        waitrt?
        empty_trash
        return
      when 'You are in no condition'
        dispose_trash(item)
        wait_for_script_to_complete('safe-room')
        return
      else
        break unless forage?(item)
      end
    end
    pause 1
    waitrt?
    bput("pull my #{item}", 'You tug and pull')
    pause 1
    waitrt?
    empty_trash
  end

  # TODO: Share code with crossing-training
  def empty_trash
    trash_nouns = get_data('items').trash_nouns

    if trash_nouns.any? { |noun| /\b#{noun}/i =~ GameObj.right_hand.noun } && !@equipment_manager.is_listed_item?(right_hand)
      dispose_trash(right_hand)
    end

    if trash_nouns.any? { |noun| /\b#{noun}/i =~ GameObj.left_hand.noun } && !@equipment_manager.is_listed_item?(left_hand)
      dispose_trash(left_hand)
    end
    dump_junk
  end
end

MechLore.new
