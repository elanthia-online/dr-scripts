=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#buffother
=end

custom_require.call(%w(drinfomon common-arcana common-travel))

class BuffOther
  include DRCA
  include DRCT

  def initialize
    arg_definitions = [
      [
        { name: 'recipient', regex: /\w+/, description: 'Player to buff.' },
        { name: 'waggle', regex: /\w+/, description: 'Waggle set to buff on player.' },
        { name: 'room', regex: /\d+/, optional: true, description: 'Will move to room number of target player.' }
      ]
    ]

    args = parse_args(arg_definitions)

    settings = get_settings
    recipient = args.recipient.capitalize
    waggle_set = args.waggle
    room = args.room

    move_to_room(recipient, room)
    cast_buff_spells(recipient, waggle_set, settings)
  end

  def move_to_room(recipient, room)
    return unless room

    DRC.message "Tracking down #{recipient} in room ##{room}!"
    DRCT.walk_to(room)
  end

  def cast_buff_spells(recipient, waggle_set, settings)
    if !DRRoom.pcs.include? (recipient)
      DRC.message "#{recipient} not found in room. Exiting..."
      exit
    end

    spell_data = settings.waggle_sets[waggle_set].values.each do |spell_data|
      spell_data['cast'] = "cast #{recipient}"
      spell_data['recast'] = 99  
      
      pause 1 while DRStats.mana < 40
      DRCA.cast_spell(spell_data, settings, settings.waggle_force_cambrinth)
    end
  end

end

before_dying do
  fput("release mana")
end

BuffOther.new