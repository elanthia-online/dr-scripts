# quiet
=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#smartlisten
=end

custom_require.call(%w(common drinfomon))

UserVars.listen_skills = get_settings.listen_skills

if DRStats.barbarian?
  UserVars.listen_skills += ['Expertise', 'Inner Fire']
  UserVars.listen_skills -= ['Arcana']
elsif DRStats.bard?
  UserVars.listen_skills += ['Bardic Lore', 'Elemental Magic']
elsif DRStats.cleric?
  UserVars.listen_skills += ['Theurgy', 'Holy Magic']
elsif DRStats.empath?
  UserVars.listen_skills += ['Empathy', 'Life Magic']
elsif DRStats.moon_mage?
  UserVars.listen_skills += ['Astrology', 'Lunar Magic']
elsif DRStats.necromancer?
  UserVars.listen_skills += ['Thanatology', 'Arcane Magic']
elsif DRStats.paladin?
  UserVars.listen_skills += ['Endurance', 'Holy Magic']
elsif DRStats.ranger?
  UserVars.listen_skills += ['Scouting', 'Life Magic']
elsif DRStats.thief?
  UserVars.listen_skills += ['Backstab', 'Inner Magic']
elsif DRStats.trader?
  UserVars.listen_skills += ['Trading']
elsif DRStats.warrior_mage?
  UserVars.listen_skills += ['Summoning', 'Elemental Magic']
end

loop do
  next unless script.gets =~ /(.*) begins to lecture you on the proper usage of the (.*) skill/
  teacher = Regexp.last_match(1)
  skill = Regexp.last_match(2)
  echo "Checking if I should listen to a class on #{skill}"
  next unless UserVars.listen_skills.include?(skill)
  echo "Attempting to listen to #{teacher}"
  DRC.listen?(teacher)
end
