# quiet
=begin
  Suggestions and contributions are welcome: https://github.com/rpherbig/dr-scripts

  Automatic listener: if someone teaches you an approved class you'll start listening.

  The default list is all non-necromancer skills and no sorcery or thievery. You can customize the list
  by putting your character name into a When clause (see below for examples).

  To stop listening automatically:
  ;k smartlisten
=end

custom_require(%w(common))

defaults = [
  'Large Edged', 'Twohanded Edged', 'Small Blunt', 'Light Thrown', 'Brawling', 'Offhand Weapon',
  'Melee Mastery', 'Missile Mastery', 'Life Magic', 'Attunement', 'Arcana', 'Augmentation',
  'Utility', 'Warding', 'Athletics', 'Perception', 'First Aid', 'Outdoorsmanship', 'Scholarship',
  'Mechanical Lore', 'Appraisal', 'Performance', 'Tactics', 'Stealth', 'Bow',
  'Evasion', 'Parry Ability', 'Small Edged', 'Defending', 'Light Armor', 'Chain Armor',
  'Shield Usage', 'Targeted Magic', 'Debilitation', 'Brigandine', 'Plate Armor', 'Large Blunt',
  'Twohanded Blunt', 'Slings', 'Crossbow', 'Staves', 'Polearms', 'Heavy Thrown', 'Locksmithing',
  'Skinning', 'Forging', 'Engineering', 'Outfitting', 'Alchemy']

UserVars.listen_skills = defaults
case checkname
when 'Etreu' # Ranger
  UserVars.listen_skills += ['Scouting']
when 'Menacra' # Cleric
  UserVars.listen_skills += ['Theurgy']
when 'Selanas' # Empath
  UserVars.listen_skills += ['Empathy']
when 'Sheltim' # Barbarian
  UserVars.listen_skills += ['Expertise']
  UserVars.listen_skills -= ['Arcana']
when 'Torgro' # Warrior Mage
  UserVars.listen_skills += ['Summoning']
end

while line = script.gets
  if line =~ /(.*) begins to lecture you on the proper usage of the (.*) skill/
    DRC.bput("listen to #{Regexp.last_match(1)}", '^You begin to listen to') if UserVars.listen_skills.include?(Regexp.last_match(2))
  end
  begin
  rescue Exception
    echo $ERROR_INFO
    echo $ERROR_INFO.backtrace.first
    sleep 1
  rescue ThreadError
    echo $ERROR_INFO
    echo $ERROR_INFO.backtrace.first
    sleep 1
  rescue
    echo $ERROR_INFO
    echo $ERROR_INFO.backtrace.first
    sleep 1
  end
end
