=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#dusk-labyrinth
=end

custom_require.call %w[common common-items events]

class DuskLab
  include DRC
  include DRCI
  def initialize
    @settings = get_settings
    @labyrinth_data = @settings.duskruin['labyrinth']
    loot_container = @labyrinth_data['loot_container']
    pet_noun = @labyrinth_data['pet_noun']
    redeem_scrip = @labyrinth_data['redeem_scrip']
    Flags.add('five-minute-warning', 'You only have about 5 minutes left in the labyrinth!')
    Flags.add('done', 'A surly Dwarf stomps in and glowers at you in the dim gloom')
    Flags.add('no-pet', "A small #{pet_noun} scurries #{Regexp.new('(?<pet_dir>\w+)')}!")
    Flags.add('pet', "You notice a small #{pet_noun} scurrying around the area")
    Flags.add('caught', 'You pick them both up, claiming your new pet')
    @prev_dir = nil
    @dir_to_prev_dir = {
      'northeast' => 'southwest',
      'southwest' => 'northeast',
      'northwest' => 'southeast',
      'southeast' => 'northwest',
      'north' => 'south',
      'south' => 'north',
      'east' => 'west',
      'west' => 'east',
      'up' => 'down', # up and down dont appear in the maze, but are used for testing
      'down' => 'up'
    }
    stow_hands
    main(loot_container) until done?
    redeem if redeem_scrip
  end

  def redeem
    while bput('get my bloodscrip', 'You get', 'What were') == 'You get'
      bput('redeem my bloodscrip', 'You quickly pocket')
    end
  end

  def main(loot_container)
    # search
    @pause_timer = Time.now
    pause 1 until Flags['no-pet'] || Flags['pet'] || Flags['caught']
    if Flags['no-pet'] && Flags['five-minute-warning']
      search
      Flags.reset('no-pet')
    elsif Flags['no-pet']
      Flags.reset('no-pet')
    elsif Flags['pet']
      search
      Flags.reset('pet')
    elsif Flags['five-minute-warning'] || Flags['caught']
      search
    end
    stow_loot(loot_container)
    wander unless done?
  end

  def next_move(exits)
    if exits.count > 1 && !@prev_dir.nil?
      exits.delete(@dir_to_prev_dir[@prev_dir.to_s])
    end
    exits.sample
  end

  def wander
    waitrt?
    next_dir = next_move(XMLData.room_exits)
    @dir_to_prev_dir.each_key { |dir| break if move(dir) } unless move(next_dir)
    @prev_dir = next_dir
  end

  def stow_loot(loot_container)
    if loot_container
      fput("put my #{DRC.left_hand} in my #{loot_container}") if DRC.left_hand
      fput("put my #{DRC.right_hand} in my #{loot_container}") if DRC.right_hand
    else
      stow_hands
    end
  end

  def search
    bput('search', 'You search around', "You've recently searched this area", 'As you begin to search')
    waitrt?
    fix_standing
  end

  def done?
    XMLData.room_title == '[[Duskruin, Darkened Antichamber]]' || Flags['done']
  end
end

before_dying do
  Flags.delete('five-minute-warning')
  Flags.delete('done')
  Flags.delete('no-pet')
  Flags.delete('pet')
  Flags.delete('caught')
end

DuskLab.new
