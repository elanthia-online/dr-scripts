=begin
  Suggestions and contributions are welcome: https://github.com/rpherbig/dr-scripts

  This script will repair a list of items. It is intended to be used in The Crossing (https://elanthipedia.play.net/mediawiki/index.php/RanikMap1).

  Before running this script for the first time:
  * Set up a configuration script named "crossing-repair-setup"
    * Download "crossing-repair-setup" for an example configuration script.
  * You can turn on debug mode with ;e UserVars.crossing_repair_debug = true
=end

custom_require(%w(common drinfomon))

class CrossingRepair
  include DRC

  def main
    setup

    ensure_copper_on_hand(UserVars.withdrawal_amount)

    echo 'Going to Randal in the Wolf Clan' if UserVars.crossing_repair_debug
    repair_at 1544, UserVars.repair_items.select(&:is_leather?), 'Randal'

    echo 'Going to Catrox in the Crossing forge' if UserVars.crossing_repair_debug
    repair_at 19_093, UserVars.repair_items.select { |item| !item.is_leather? }, 'Catrox'
  end

  def setup
    # Configure UserVars
    unless wait_for_script_to_complete 'crossing-repair-setup'
      echo '***Please configure your setup script (open this script for instructions).***'
      stop_script 'crossing-repair'
    end

    empty_hands
  end

  def repair(item, repairer)
    echo "Repairing #{item.name} at #{repairer}" if UserVars.crossing_repair_debug

    action = item.is_worn? ? 'remove' : 'get'
    fput "#{action} my #{item.name}"

    case bput("give my #{item.name} to #{repairer}", "There isn't a scratch on that", 'Just give it to me again', 'What is it')
    when "There isn't a scratch on that"
      fput "stow my #{item.name}"
    when 'What is it'
      beep
      echo '*** ***'
      echo "***#{item.name} not found!***"
      echo '*** ***'
    else
      fput "give my #{item.name} to #{repairer}"
      fput 'stow my ticket'
    end
  end

  def tickets_left?(repairer)
    case bput('look at my ticket', "won't be ready for another", 'should be ready any moment now', 'should be ready by now', 'I could not find what you were referring to')
    when "won't be ready for another", 'should be ready any moment now'
      echo '***Item not ready yet. Sleeping for 30 seconds.***'
      pause 30
    when 'should be ready by now'
      fput 'get my ticket'
      fput "give my ticket to #{repairer}"
      empty_hands
    else
      return false
    end

    true
  end

  def repair_at(target_room, items, repairer)
    return if items.nil? || items.empty?
    walk_to target_room

    items.each do |item|
      repair(item, repairer)
    end

    while tickets_left?(repairer)
    end

    items
      .select(&:is_worn?)
      .each do |item|
      fput "get my #{item.name}"
      fput "wear my #{item.name}"
    end
  end
end

# Call this last to avoid the need for forward declarations
CrossingRepair.new.main
