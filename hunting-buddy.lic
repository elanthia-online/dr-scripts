=begin
  Documentation: https://elanthipedia.play.net/mediawiki/index.php/Lich_script_development#hunting-buddy
=end

custom_require.call(%w(common common-travel drinfomon events spellmonitor equipmanager))

class HuntingBuddy
  include DRC
  include DRCT

  def initialize
    @settings = get_settings

    @settings.hunting_info([]).each do |info|
      if @stopped_for_bleeding
        retreat
        stop_script('tendme') if Script.running?('tendme')
        break
      end
      args = info['args'] || []
      duration = info[:duration]
      stop_on_skills = info['stop_on']

      next unless find_hunting_room?(info[:zone])
      next if all_skills_at_cap?(stop_on_skills)

      if @settings.training_manager_hunting_priority(false)
        if args.flatten == args
          hunt(args, duration, stop_on_skills)
        else
          args.each_with_index { |arg, index| hunt(arg, duration[index], stop_on_skills[index]) }
        end
      elsif args.flatten == args
        hunt(args, duration, stop_on_skills)
      else
        args.each_with_index { |arg, index| hunt(arg, duration[index], stop_on_skills[index]) }
      end
      wait_for_script_to_complete('bescort', @exit) if @exit
      fput('release hyh') if DRSpells.active_spells['Hydra Hex']
      fput('release ee') if DRSpells.active_spells['Electrostatic Eddy']
    end
    walk_to(793)
    EquipmentManager.instance.wear_equipment_set?('standard')
  end

  def find_hunting_room?(zone_name)
    if rooms = @settings.hunting_zones[zone_name]
      @exit = nil
      UserVars.friends = @settings.hunting_buddies
      find_empty_room(rooms, 793,
                      lambda do
                        return true if DRRoom.npcs.empty? && (DRRoom.pcs - UserVars.friends).empty?
                        return false unless (DRRoom.pcs - UserVars.friends).empty?
                        return true unless (DRRoom.pcs & UserVars.friends).empty?
                        Flags.add('room-check', 'says, ', 'say, ', 'You hear')
                        fput('say Anyone here?')
                        return false unless 'You don\'t find anything of interest here' == bput('search', 'You don\'t find anything of interest here', 'vague silhouette', 'attempting to remain hidden')
                        20.times do |_|
                          pause 0.5
                          return false if Flags['room-check'] || !(DRRoom.pcs - UserVars.friends).empty?
                        end
                        true
                      end)
    else
      escort_info = @settings.escort_zones[zone_name]
      unless escort_info
        echo "FAILED TO FIND HUNTING ZONE #{zone_name} IN BASE.YAML"
        return false
      end
      walk_to(escort_info['base'])
      wait_for_script_to_complete('bescort', [escort_info['area'], escort_info['enter']])
      @exit = [escort_info['area'], 'exit']
    end

    true
  end

  def all_skills_at_cap?(stop_on_skills)
    stop_on_skills && stop_on_skills.all? { |skill| DRSkill.getxp(skill) >= 32 }
  end

  def hunt(args, duration, stop_on_skills)
    verify_script('combat-trainer')
    start_script('combat-trainer', args)
    pause 1 until $COMBAT_TRAINER.running
    counter = 0
    loop do
      if @settings.stop_hunting_if_bleeding && checkbleeding
        echo('***STATUS*** stopping due to bleeding')
        @stopped_for_bleeding = true
        break
      end
      if all_skills_at_cap?(stop_on_skills)
        echo('***STATUS*** stopping due to skills')
        break
      end
      if duration && (counter / 60) >= duration
        echo('***STATUS*** stopping due to time')
        break
      end
      if (counter % 60).zero?
        if duration
          if stop_on_skills
            echo("***STATUS*** #{duration - (counter / 60)} minutes of hunting remaining or waiting on #{stop_on_skills.select { |skill| DRSkill.getxp(skill) < 32 }.join(', ')}")
          else
            echo("***STATUS*** #{duration - (counter / 60)} minutes of hunting remaining")
          end
        else
          echo("***STATUS*** #{counter / 60} minutes of hunting, still waiting on #{stop_on_skills.select { |skill| DRSkill.getxp(skill) < 32 }.join(', ')}")
        end
      end
      counter += 1
      pause 1
    end
    $COMBAT_TRAINER.stop
    pause 1 while $COMBAT_TRAINER.running
    retreat
  end
end

HuntingBuddy.new
