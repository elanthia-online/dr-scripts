=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#sorcery
=end

custom_require.call(%w(common common-arcana common-travel drinfomon events))

class Sorcery
  include DRC
  include DRCA
  include DRCT

  def initialize
    arg_definitions = [
      [
        { name: 'target_mindstate', regex: /\d+/, optional: true, description: 'Repeat the sorcery casting until reaching this mindstate.' }
      ]
    ]
    args = parse_args(arg_definitions)
    @settings = get_settings

    return if cast_sorcery_spell?(args.target_mindstate)

    focus_runestone(args.target_mindstate)
  end

  def cast_sorcery_spell?(target_mindstate)
    sorcery_spell = @settings.crossing_training_sorcery
    return false unless sorcery_spell

    walk_to(@settings.crossing_training_sorcery_room)

    maxcasts = 3
    maxmindstate = 30
    if target_mindstate && target_mindstate.to_i <= 34
      maxcasts = 1000
      maxmindstate = target_mindstate.to_i
    end    

    Flags.add('sorcery-failure', 'The spell pattern resists the influx')
    maxcasts.times do
      break if DRSkill.getxp('Sorcery') >= maxmindstate
      break if mana < 40

      if sorcery_spell.is_a?(Hash)
        buff(sorcery_spell, @settings)
      else
        fput "prep #{sorcery_spell}"
        pause 3
        waitcastrt?
        cast?
      end
      pause 0.5 while stunned?

      if Flags['sorcery-failure']
        wait_for_script_to_complete('safe-room')
        Flags.reset('sorcery-failure')
      end
    end

    true
  end

  def focus_runestone(target_mindstate)
    return if DRSkill.getrank('Sorcery') > 50
    case bput('get my runestone', 'You get', 'I could not find', 'What were you referring to','You are already holding that')
    when 'I could not find', 'What were you referring to'
      return
    end
    maxfocuses = 5
    maxmindstate = 30
    if target_mindstate && target_mindstate.to_i <= 34
      maxfocuses = 1000
      maxmindstate = target_mindstate.to_i
    end
    maxfocuses.times do
      break if DRSkill.getxp('Sorcery') >= maxmindstate 
       bput('focus my runestone', 'You focus your magical senses')
      waitrt?
    end

   
      bput('stow runestone', 'You put your')

    return
  end
end

# Call this last to avoid the need for forward declarations
Sorcery.new
