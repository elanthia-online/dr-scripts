=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#first-aid
=end

custom_require.call(%w(common drinfomon equipmanager))

class FirstAid
  include DRC

  def initialize
    settings = get_settings
    @chart_data = get_data('anatomy-charts').first_aid_charts
	@textbook = settings.textbook
    if @textbook
      @booktype = 'textbook'
	  textbook_charts
    else
      @booktype = 'compendium'
	  compendium_charts
	end
  end
  
  def compendium_charts
    bput('get my compendium', 'You get')
    bput('look my compendium', '^The compendium lies open to the section on .* physiology')
    pause
    charts = reget(40).grep(/^   .+$/).map(&:strip)

    charts_to_read = charts.select { |chart| @chart_data[chart]['scholarship'] <= DRSkill.getrank('Scholarship') }
	study_charts(charts_to_read)
  end
  
  def textbook_charts
    charts_to_read = []
    bput('get my textbook', 'You get')
    readable_charts = @chart_data.select { |chart| @chart_data[chart]['scholarship'] <= DRSkill.getrank('Scholarship')}
    readable_charts.each do |name, info|
      charts_to_read.unshift(info['index'])
	end
	study_charts(charts_to_read)
  end
  
  def study_charts(charts_to_read)
    charts_to_read.each do |chart|
      case bput("turn my #{@booktype} to #{@chart_data[chart]['index']}", 'You turn', 'That section does not exist within your compendium')
      when 'You turn'
        bput("study my #{@booktype}", 'you begin to study', 'you begin studying', 'With a sudden moment of', 'In a sudden moment of clarity', '^Why ', 'you continue to study', 'you attempt', 'you continue studying')
        waitrt?
        break if DRSkill.getxp('First Aid') >= 30
      end
    end
    EquipmentManager.instance.empty_hands
  end
end

# Call this last to avoid the need for forward declarations
FirstAid.new
