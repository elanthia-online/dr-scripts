custom_require.call(%w[common])

class Insult
  include DRC

  def initialize
    arg_definitions =
      [
        [
          { name: 'name', regex: /^[A-z]+$/i, description: 'Name of person to insult.  Use full name.' },
          { name: 'insult', regex: /^[A-z\-]+$/i, optional: true, description: 'Winning insult!' }
        ]
      ]
    args = parse_args(arg_definitions)
    @name = args.name.capitalize
    @insult = args.insult ? args.insult : 'nut-hook'

    loop do
      insult
      receive_insult
    end
  end

  def receive_insult
    waitfor(/^#{@name} says to you, \"You, (sir|madam), are a/)
    line = reget(1)
    declare_winner(line[0]) if line[0].match(/#{@insult}/)
  end

  def insult
    # pause 2
    bput("mock #{@name}", /You say to #{@name},/)
    line = reget(1)
    declare_winner(line[0]) if line[0].match(/#{@insult}/)
  end

  def declare_winner(line)
    bput("say #{@name} wins!", /You exclaim/) if line.include?("#{@name} says to you")
    bput("say I win!", /You exclaim/) if line.include?("You say to #{@name}")
    exit
  end
end

Insult.new
