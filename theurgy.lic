=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#theurgy
=end

$settings = get_settings

custom_require.call(%w(common common-items common-money common-travel drinfomon))

######################## GET/PUT ########################

def put_in_container(item)
  DRC.bput "put #{item} in my #{$settings.theurgy_supply_container}", 'You put', 'What were you referring to'
end

def get_from_container(item)
  DRC.bput "get #{item} from my #{$settings.theurgy_supply_container}", 'You get', 'I could not find', 'What were you referring to'
end

######################## COMMUNES ########################

def comm_eluned
  fput "stow #{GameObj.right_hand.noun}" if GameObj.right_hand.name != 'Empty'
  fput "stow #{GameObj.left_hand.noun}" if GameObj.left_hand.name != 'Empty'

  DRC.forage? 'dirt'

  get_from_container($settings.water_holder)
  DRC.bput('commune eluned', 'completed this commune too recently', 'You grind some dirt in your fist')
  put_in_container($settings.water_holder)
  fput('drop dirt') if [DRC.left_hand, DRC.right_hand].include?('dirt')
end

def comm_tamsine
  if DRCI.inside?('holy water', "#{$settings.water_holder}")
    pause 1
    waitrt?
    get_from_container($settings.water_holder)
    fput "sprinkle #{$settings.water_holder} on #{checkname}"
    DRC.bput('commune tamsine', 'completed this commune too recently', 'You feel warmth spread throughout your body')
    put_in_container($settings.water_holder)
  else
    Flags.delete['theurgy-tamsine']
    return
  end
end

def comm_kert
  $hold_research = nil
  if DRCI.inside?('holy oil', "#{$settings.theurgy_supply_container}")
    get_from_container('holy oil')
  else
    case DRC.bput("get oil from #{$settings.theurgy_supply_container}", 'holy oil', 'some oil', 'I could not find', 'What were you referring to')
    when 'I could not find', 'What were you referring to'
      return
    when 'some oil'
      research_check
      fput 'prep bless'
      pause 5
      fput 'cast oil'
    end
  end
  if $hold_research != nil && Flags['research_done'] == false
    fput ("RESEARCH #{$hold_research.upcase} 300")
  end
  fput "sprinkle holy oil on #{checkname}"
  put_in_container('oil')
  DRC.bput('commune kertigen', 'completed this commune too recently', 'The thick smell of ozone fills your nostrils')
end

def comm_truff
  fput "stow #{GameObj.right_hand.noun}" if GameObj.right_hand.name != 'Empty'
  fput "stow #{GameObj.left_hand.noun}" if GameObj.left_hand.name != 'Empty'
  get_from_container('Taffelberries')
  DRC.bput('commune truffenyi', 'completed this commune too recently', 'The power of Truffenyi has answered your prayer')
  pause 1
  if DRC.right_hand.include? "orb"
    fput 'drop orb'
  else
    fput 'get Taffelberries'
    put_in_container('Taffelberries')
  end
end

######################## SHOPPING ########################

def check_supplies
  if DRStats.circle > 60
    buy_Taffelberries unless DRCI.inside?('Taffelberries', "#{$settings.theurgy_supply_container}")
  end
  buy_incense unless DRCI.inside?('incense', "#{$settings.theurgy_supply_container}")
  buy_sage unless DRCI.inside?('sage', "#{$settings.theurgy_supply_container}")
  buy_lavender unless DRCI.inside?('lavender', "#{$settings.theurgy_supply_container}")
  buy_wine unless DRCI.inside?('wine', "#{$settings.theurgy_supply_container}")
  buy_oil unless DRCI.inside?('holy oil', "#{$settings.theurgy_supply_container}")
  buy_flint unless DRCI.inside?('flint', "#{$settings.theurgy_supply_container}")
  buy_parchment unless DRCI.inside?('golden parchment', "#{$settings.theurgy_supply_container}")
  DRCT.walk_to '741'
end

def buy_incense
  DRCI.buy_item(19_073, 'incense')
  put_in_container('incense')
end

def buy_lavender
  DRCI.buy_item(19_073, 'lavender')
  put_in_container('lavender')
end

def buy_sage
  DRCI.buy_item(19_073, 'sage')
  put_in_container('sage')
end

def buy_flint
  DRCI.buy_item(8265, 'flint')
  put_in_container('flint')
end

def buy_wine
  DRCI.buy_item(19_073, 'wine')
  put_in_container('wine')
end

def buy_oil
  DRCI.buy_item(19_076, 'oil')
  put_in_container('oil')
end

def buy_parchment
  DRCM.ensure_copper_on_hand(6300, $settings.hometown)
  DRCT.walk_to('5735')
  fput 'read placard'
  pause 1
  fput 'order 4 from monk'
  fput 'unroll my parchment'
  put_in_container('golden parchment')
end

def buy_Taffelberries
  DRCI.order_item(8280, 14)
  fput 'get Taffelberries'
  put_in_container('Taffelberries')
  fput 'get Taffelberries'
  put_in_container('Taffelberries')
end

######################## CARVING ########################

def carve_bead
  DRCT.walk_to '1030'
  exit unless DRRoom.npcs.empty? # Invasion check
  if $settings.immortal_aspect && DRCI.exists?('carving knife') && DRCI.exists?('shaper') && DRCI.exists?('prayer chain')
    prayer_bead
  end
end

def prayer_bead
  return unless DRCI.inside?('holy water', "#{$settings.water_holder}")
  return unless DRSkill.getrank('Mechanical Lore') > 140
  $hold_research = nil
  fput "stow #{GameObj.right_hand.noun}" if GameObj.right_hand.name != 'Empty'
  fput "stow #{GameObj.left_hand.noun}" if GameObj.left_hand.name != 'Empty'
  case DRC.bput('get prayer chain', 'You get', 'I could not find', 'What were you referring to', 'already in your inventory')
  when 'I could not find', 'What were you referring to'
    echo 'No Prayer Chain Found - Skipping Bead Carve'
    return
  when 'already in your inventory'
    fput 'remove my prayer chain'
    worn_chain = true
  end
  beads = DRC.bput("look at my chain", /^Strung on to the prayer bead chain you see .*\./, 'There are currently no beads on it.')
  bead_count = DRC.list_to_nouns(beads.match(/^Strung on to the prayer bead chain you see (.*)\./).to_a[1])
  if bead_count.count >= 10
    put_in_container('prayer chain')
    return
  end
  put_in_container('prayer chain')
  research_check
  fput 'prep bless'
  DRC.forage? 'limb'
  get_from_container($settings.water_holder)
  fput("sprinkle #{$settings.water_holder} on my limb")
  put_in_container($settings.water_holder)
  pause 1
  fput 'cast my limb'
  if $hold_research != nil && Flags['research_done'] == false
    fput ("RESEARCH #{$hold_research.upcase} 300")
  end
  DRC.bput('get carving knife', 'You get', 'I could not find', 'What were you referring to')
  while DRC.right_hand.include? "limb"
    fput('carve my limb with my knife')
    pause 1
    waitrt?
  end
  put_in_container('carving knife')
  DRC.bput('get shaper', 'You get', 'I could not find', 'What were you referring to')
  while DRC.right_hand.include? "block"
    fput("shape block to #{$settings.immortal_aspect}")
	pause 1
    waitrt?
  end
  put_in_container('shaper')
  get_from_container('prayer chain')
  fput ("put #{$settings.immortal_aspect} bead on prayer chain")
  if worn_chain
    DRC.bput('wear prayer chain', 'You attach', 'You are already wearing that', 'Wear what?')
  else
    put_in_container('prayer chain')
  end
end

######################## DEVOTION RITUALS ########################

def clean_altar
  return unless DRCI.inside?('holy water', "#{$settings.water_holder}")
  get_from_container($settings.water_holder)
  fput 'clean altar with holy water'
  waitfor 'You finish your job'
  put_in_container($settings.water_holder)
  waitrt?
end

def meditate_bead
  if $settings.immortal_aspect
    case DRC.bput('get prayer chain', 'You get', 'I could not find', 'What were you referring to', 'already in your inventory')
    when 'I could not find', 'What were you referring to'
      echo 'No Prayer Chain Found - Skipping Prayer Bead Meditation'
      return
    when 'already in your inventory'
      fput 'remove my prayer chain'
      worn_chain = true
    end
    beads = DRC.bput("look at my chain", /^Strung on to the prayer bead chain you see .*\./, 'There are currently no beads on it.')
    bead_count = DRC.list_to_nouns(beads.match(/^Strung on to the prayer bead chain you see (.*)\./).to_a[1])
    if bead_count.count >= 1
      fput 'kneel'
      fput 'meditate my prayer chain'
      waitfor 'suddenly detaches from your prayer bead chain'
      DRC.fix_standing
      if worn_chain
        DRC.bput('wear prayer chain', 'You attach', 'You are already wearing that', 'Wear what?')
      else
        put_in_container('prayer chain')
      end
    end
    waitrt?
  end
end

def bathe
  move 'go pool'
  get_from_container('sage')
  fput 'rub sage'
  pause 1
  get_from_container('lavender')
  fput 'rub lavender'
  waitfor 'A Dark Grove, A Deep Pool'
  DRC.fix_standing
  move 'out'
end

def tithe
  DRCT.walk_to '741'
  DRC.bput("put 5 silver kronar in almsbox", 'You drop', 'But you do not')
end

def pray
  waitrt?
  if $settings.favor_god
    DRC.bput("pray #{$settings.favor_god}", "#{$settings.favor_god}")
    waitrt?
  else
    DRC.bput('pray meraud', 'meraud')
    waitrt?
  end
end

def study_wall
  if DRStats.circle >= 30
    DRCT.walk_to '5846'
    move 'pull candle'
    case DRC.bput('study wall', 'Turning your attention to the sigils', 'interrupt your research')
    when 'Turning your attention to the sigils'
      waitfor 'as your understanding of the sigils gradually slips away.'
    when 'interrupt your research'
      echo 'Researching - skipping Study'
    end
  end
  move 'go hatch'
  DRCT.walk_to '741'
end

def find_seed
  return unless DRCI.inside?('holy water', "#{$settings.water_holder}")
  DRCT.walk_to '1032'
  exit unless DRRoom.npcs.empty? # Invasion check
  while 'You come up empty' == DRC.bput('gather seed', 'You find a tiny', 'This is not a good', 'You come up empty')
    waitrt?
  end
  waitrt?
  plant_seed
end

def plant_seed
  DRCT.walk_to '1031'
  fput('plant seed')
  get_from_container($settings.water_holder)
  fput("sprinkle #{$settings.water_holder} on room")
  put_in_container($settings.water_holder)
end

def pray_badge
  case DRC.bput('remove badge', 'You take off', 'Remove what')
  when 'You take off'
    fput 'pray badge'
    pause 2
    waitrt?
    DRC.bput 'wear badge', 'You put on a', 'You are already'
  when 'Remove what'
    return if 'You get' != DRC.bput('get badge', 'You get', 'I could not find', 'What were you referring to')
    fput 'pray badge'
    pause 2
    waitrt?
    put_in_container ('pilgrim badge')
  end
end

def dance
  until ['flawless performance to those on high', 'In your condition', 'Your dance reaches its conclusion'].include? DRC.bput('dance', 'flawless performance to those on high', 'Your dance reaches its conclusion', 'You begin to dance', 'Your actions grow', 'Your dance', 'but you falt', 'In your condition',)
    pause 1
    waitrt?
    DRC.fix_standing
  end
end

def incense_wine
  DRC.bput("get #{$settings.flint_lighter}", 'You get', 'I could not find', 'What were you referring to')
  get_from_container('incense')
  while 'nothing happens' == DRC.bput('light my incense with flint', 'nothing happens', 'bursts into flames', 'much too dark in here to do that')
    waitrt?
  end
  waitrt?
  fput 'wave incense at altar'
  fput 'snuff incense'
  put_in_container('incense')
  fput "stow #{$settings.flint_lighter}", 'You put your', 'Stow what'
  pause 1
  get_from_container('wine')
  fput 'pour wine on altar'
  put_in_container('wine')
end

def recite_prayer
  fput "recite Meraud, power the holy fires that unleash my righteous vengeance;Chadatru, guide my sword to swing in justice;Everild, give me the power to conquer my enemies;Truffenyi, let me not lose sight of compassion and mercy;Else, I will become like those I despise;Urrem'tier, receive into your fetid grasp these wicked souls;May the Tamsine's realms never know their evil ways again;May all the Immortals guide your faithful soldier #{checkname}."
  pause 1
  waitrt?
end

def reflectory
  DRCT.walk_to '5988'
  fput 'meditate'
  waitrt?
  DRCT.walk_to '1030'
end

def invoke_parchment
  DRCT.walk_to($settings.safe_room)
  if 'but there is nothing in there like that' != DRC.bput("rummage /C parchment my #{$settings.theurgy_supply_container}", 'but there is nothing in there like that', 'pale golden prayer parchment')
    get_from_container('golden parchment')
    fput 'invoke my parchment'
    waitfor 'You conclude'
    put_in_container('golden parchment')
  end
end

######################## CUSTOM TRAVEL ########################

def enter_altar
  DRCT.walk_to('1164')
  move 'go shack'
  move 'go hole'
  move 'west'
  move 'up'
  waitrt?
  DRC.fix_standing
  move 'go path'
end

def exit_altar
  move 'go path'
  move 'go hole'
  waitrt?
  DRC.fix_standing
  move 'east'
  move 'go hole'
  move 'out'
end

######################## MISC ########################

def research_check
  case find_current_project = DRC.bput("research status", / (\d+)% complete with a portion .*\./, 'not researching anything', 'project about')
  when /not researching anything/
    return
  when /project about/
    research_type = ["Fundamental", "Augmentation", "Stream", "Sorcery", "Utility", "Warding"]
    find_research = research_type.find{ |find_research| find_current_project =~ /#{find_research}/i }
	$hold_research = find_research
    if $hold_research.nil?
      return
    end
  when /complete with a portion/
    research_type = ["Fundamental", "Augmentation", "Stream", "Sorcery", "Utility", "Warding"]
    find_research = research_type.find{ |find_research| find_current_project =~ /#{find_research}/i }
	$hold_research = find_research
    if $hold_research.nil?
      return
    end
    if find_current_project[1,2].to_i >= 60
      wait_time = (101 - find_current_project[1,2].to_i) * 3
      Flags.reset('research_done')
      pause (wait_time)
    else
      echo "stopping research"
    end
    fput 'prep bless'
  end
  return $hold_research
end

def commune_check
  if Flags['theurgy-commune'] == false
    next_commune
  elsif Flags['theurgy-commune'].include? "fully prepared to seek assistance from the Immortals once again"
    next_commune
  else
    return
  end
end

def next_commune
  if Flags['theurgy-eluned'] == false && DRStats.circle > 3 && DRSkill.getrank('Outdoorsmanship') >= 20 && DRSkill.getxp('Theurgy') <=31
    comm_eluned
  elsif Flags['theurgy-tamsine'] == false && DRStats.circle > 2 && DRSkill.getxp('Theurgy') <=31
    comm_tamsine
  elsif Flags['theurgy-truffenyi'] == false && DRStats.circle > 60 && DRSkill.getxp('Theurgy') <=24
    comm_truff
  elsif Flags['theurgy-kertigen'] == false && DRStats.circle > 8 && DRSkill.getxp('Theurgy') <=31
    comm_kert
  end
end

######################## FLAGS ########################
  
Flags.add('theurgy-commune', 'fully prepared to seek assistance from the Immortals once again', 'You will not be able to open another divine conduit yet', 'You grind some dirt in your fist', 'You feel warmth spread throughout your body', 'The power of Truffenyi has answered your prayer', 'The thick smell of ozone fills your nostrils')
Flags.add('theurgy-eluned', 'You grind some dirt in your fist', 'The waters of Eluned are still in your thoughts')
Flags.add('theurgy-tamsine', 'You feel warmth spread throughout your body', 'You have been recently enlightened by Tamsine')
Flags.add('theurgy-truffenyi', 'The power of Truffenyi has answered your prayer', 'You are still captivated by Truffenyi\'s favor')
Flags.add('theurgy-kertigen', 'The thick smell of ozone fills your nostrils', 'The sounds of Kertigen\'s forge still ring in your ears')
Flags.add('research_done', '^Breakthrough!')

######################## SCRIPT ########################

DRCT.walk_to '1900'
fput 'withdraw 12 silver'
pray
check_supplies
fput 'commune sense'
waitrt?

ritual_order = [:tithe, :study_wall, :reflectory, :carve_bead, :find_seed, :enter_altar, :bathe, :meditate_bead, :pray_badge, :dance, :incense_wine, :recite_prayer, :clean_altar, :pray, :exit_altar, :invoke_parchment]
ritual_order.each do |ritual|
  commune_check
  self.send(ritual)
end

fput 'commune'
