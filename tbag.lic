custom_require.call(%w(common common-arcana common-healing common-items common-summoning common-validation common-travel drinfomon equipmanager events spellmonitor))


#Moving carefully, you slip your hand into Lorgreth's pockets and carefully grab a medium chunk of coral.
#is just too young to be a challenge

class Tbag

  def go
    DRCT.walk_to(@start_room)
	
	waitforemptyroom
	
	DRC.hide?
  end
  def initialize
  
    @start_room = variable[1]
    if @start_room.nil?
      @start_room=19093
	end
    stop_script('afk') if Script.running?('afk')
	stop_script('crystal') if Script.running?('crystal')
	stop_script('status-monitor') if Script.running?('status-monitor')
	#@do_not_steal=[
    #    'Chuno','Barder','Mooselurk','Byd','Leustyin','Natarian','Fuss','Crannach','Jonas',
    #    'Etreu','Sheltim','Qetu','Mitkiahn','Gabellia','Jhien','Devish','Binu','Haxen','Holtt',
    #    'Elhefe','Ssarek', 'Sarvatt']
    @no_steal_rooms=[1900,1901,1902]
    
    
	
	@attemptsremaining = 1
    
    if UserVars.tbag.nil?
      UserVars.tbag=Hash.new
    end
	populate_dns
    
	prepare
    settings = get_settings
    equipment_manager = EquipmentManager.new(settings)
    equipment_manager.wear_equipment_set?("stealing")
	
	go
    
    in_room = DRRoom.pcs
    while true
      in_room.each do | target |
        if shoulsteal(target)
          mark(target)
        end 
      end
      pause 0.5
      
      in_room = DRRoom.pcs
    end
  end
  
  def populate_dns
    UserVars.tbag['Chuno'] = 2496928411
    UserVars.tbag['Barder'] = 2496928411
    UserVars.tbag['Mooselurk'] = 2496928411
    UserVars.tbag['Byd'] = 2496928411
    UserVars.tbag['Leustyin'] = 2496928411
    UserVars.tbag['Natarian'] = 2496928411
    UserVars.tbag['Fuss'] = 2496928411
    UserVars.tbag['Crannach'] = 2496928411
    UserVars.tbag['Jonas'] = 2496928411
    UserVars.tbag['Etreu'] = 2496928411
    UserVars.tbag['Sheltim'] = 2496928411
    UserVars.tbag['Qetu'] = 2496928411
    UserVars.tbag['Mitkiahn'] = 2496928411
    UserVars.tbag['Gabellia'] = 2496928411
	UserVars.tbag['Reverence'] = 2496928411
    UserVars.tbag['Jhien'] = 2496928411
    UserVars.tbag['Devish'] = 2496928411
    UserVars.tbag['Binu'] = 2496928411
    UserVars.tbag['Haxen'] = 2496928411
    UserVars.tbag['Holtt'] = 2496928411
    UserVars.tbag['Ssarek'] = 2496928411
	UserVars.tbag['Zharyn'] = 2496928411
	UserVars.tbag['Giulietta'] = 2496928411
	UserVars.tbag['Rakkor'] = 2496928411
	UserVars.tbag['Aumau'] = 2496928411
	UserVars.tbag['Dankmar'] = 2496928411
	UserVars.tbag['Sarvatt'] = 2496928411
	UserVars.tbag['Embrace'] = 2496928411
	
  end

  def shoulsteal(target)
    now = Time.now.to_i
    stealTime = UserVars.tbag[target]

    if stealTime.nil? or now > stealTime
      #echo "Should steal from #{target}"
      return true
    end
    #echo "Shouldn't steal from #{target}"
    return false
  end
  
  def getstealattempts
    lines = reget(10)
    lines.each do | line |
      if line["would cower before you"]
	    echo "3!"
        @attemptsremaining = 3
		return
      end
	  if line["should be blind to your actions"]
	    echo "2!"
        @attemptsremaining = 2
		return
      end
	  if line["shouldn't catch you"]
	    echo "1!"
        @attemptsremaining = 1
		return
      end
    end
	echo "Default!"
    @attemptsremaining = 1
  end
  
  def mark(target)
    case DRC.bput("mark #{target}",
        "has no wealth and no coins",
        "would cower before you",
        "should be blind to your actions.",
        "shouldn't catch you",
        "has a low chance of catching you",
        "should not prove too difficult to act against",
        "It should be possible to be stealthy",
        "It's about even odds",
        "Perhaps it's a little risky",
        "It'll be troublesome to be unnoticed",
        "It's somewhat of a long shot",
        "You're pretty sure you'll be caught",
        "would likely see any of your clumsy actions",
        "You can already hear your guildmates mocking you for trying",
        "Mark what?")
    when "has no wealth and no coins"
	  UserVars.tbag[target] = Time.now.to_i + 1800 # Put them on hold for 30m
    when "would cower before you",
      "should be blind to your actions.",
      "shouldn't catch you",
      "has a low chance of catching you"
        
      ## Good to steal
      if hascoin
        "COIN FOUND"
		getstealattempts
        waitforclearroom
        steal(target)
      else
        echo "NO COIN"
        UserVars.tbag[target] = Time.now.to_i + 1800 # Put them on hold for 30m
        end
    when "should not prove too difficult to act against",
        "It should be possible to be stealthy",
        "It's about even odds",
        "Perhaps it's a little risky",
        "It'll be troublesome to be unnoticed",
        "It's somewhat of a long shot",
        "You're pretty sure you'll be caught",
        "would likely see any of your clumsy actions",
        "You can already hear your guildmates mocking you for trying"
      ## Don't do it
      UserVars.tbag[target] = Time.now.to_i + 604800 # Put them on hold for 1 week
    end
  end

  def stalk(target)
    case DRC.bput("stalk #{target}","You move into position to stalk","Stalking is an inherently stealthy endeavor","Stalk what","You've lost your mark")
    when "Stalking is an inherently stealthy endeavor"
      DRC.hide?    
      stalk(target)
    end
  end

  def waitforclearroom
    count = DRRoom.pcs.count
    while count>1
        pause 1
        count = DRRoom.pcs.count
    end
    return
  end
  
  def waitforemptyroom
    count = DRRoom.pcs.count
    while count>0
        pause 1
        count = DRRoom.pcs.count
    end
    return
  end

  def steal(target)
    while @no_steal_rooms.include? Room.current.id
      pause 1
    end
    #attemptsremaining = getstealattempts
	echo "#{@attemptsremaining} attempts remaining for #{target}"
	while @attemptsremaining>0
      case DRC.bput("steal #{target} coin",
        "meager coins just aren't worth the effort",
        "catches you trying to go",
        "you hesitate",
        "carefully grab",
        "turns away and the attempt fails",
        "You haven't picked something to steal",
		"You can't steal here",
		"is just too young to be a challenge",
		"There's no crowd here.  You had best hide at least."
      )
	  when "You can't steal here"
	    @no_steal_rooms << Room.current.id
	  when "There's no crowd here.  You had best hide at least."
	    attemptsremaining=0
	  when "is just too young to be a challenge"
	    UserVars.tbag[target] = Time.now.to_i + 604800 # Put them on hold for 1 week
      when "meager coins just aren't worth the effort"
        UserVars.tbag[target] = Time.now.to_i + 1800 # Put them on hold for 30m
		@attemptsremaining=0
      when "catches you trying to go"
        ## Caught.    Run
        echo "CAUGHT"
        DRCT.walk_to(1251)
        UserVars.tbag[target] = Time.now.to_i + 86400 # Put them on hold for 1 day
		@attemptsremaining=0
      when "you hesitate"
        steal(target)
		@attemptsremaining=0
      when "carefully grab","turns away and the attempt fails"
        ##Add to do-not-steal list
	    UserVars.tbag[target] = Time.now.to_i + 3600 # Put them on hold for 60m
      end
	  @attemptsremaining = @attemptsremaining-1
	end
    
    DRC.bput("stop stalk","You stop stalking","You're not stalking anything")
    waitforemptyroom
	
    DRC.bput('stow left',".*") if DRC.left_hand
    DRC.bput('stow right',".*") if DRC.right_hand
	go
  end
  
  def hascoin
    lines = reget(5)
    lines.each do | line |
      if line["no coins"]
        return false
      end
    end
    return true
  end
  
  def prepare
    DRCT.walk_to(19093)
	fput('khri start plunder')
  end

end

before_dying do
  start_script('afk')
  start_script('crystal')
  start_script('status-monitor')
end


Tbag.new