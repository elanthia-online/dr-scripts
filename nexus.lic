class Nexus
  def initialize
    arg_definitions = [
      [
        { name: 'resources', options: %w[concentration health mana spirit fatigue], description: 'Resource to sacrifice at nexus point' }
      ]
    ]

    args = parse_args(arg_definitions, true)

    unless args.resources
      echo("No resource specified. Exiting.")
      exit
    end
    UserVars.last_nexus ||= Time.now - 6.hours
    settings = get_settings
    hometown = settings.nexus_town || settings.fang_cove_override_town || settings.hometown
    room = get_room(hometown)
    unless room
      echo("No nexus room found for #{hometown}. Exiting.")
      exit
    end
    unless should_sacrifice?
      echo("Not enough time has passed since last nexus sacrifice.")
      echo("Exiting.")
      exit
    end
    DRCT.walk_to(room)
    sacrifice(args.resources) if args.resources && Map.current.id == room
  end

  def should_sacrifice?
    unless Time.now - 6.hours > UserVars.last_nexus
      return false
    else
      return true
    end
  end

  def sacrifice(resources)
    case DRC.bput("sacrifice nexus #{resources}",
                  /^You reach out, sensing the latent nexus and attempt to forge a connection with it/,
                  /^You've recently sacrificed to empower a nexus. You should wait a while before doing so again/,
                  /^You sense the energies of the nexus here are still intact/)
    when /You reach out, sensing the latent nexus and attempt to forge a connection with it/
      UserVars.last_nexus = Time.now
      return true
    when /You've recently sacrificed to empower a nexus. You should wait a while before doing so again/
      UserVars.last_nexus = Time.now + 1.hour
      return false
    when /You sense the energies of the nexus here are still intact/
      UserVars.last_nexus = Time.now + 30.minutes
      return false
    end
  end

  def get_room(town)
    return get_data('town')[town]['nexus']['id']
  end
end

Nexus.new
