=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#walkingastro
=end

custom_require.call %w[common common-moonmage drinfomon]

class WalkingAstro
  include DRC

  def initialize

    arg_definitions = [
      [
        { name: 'debug', regex: /debug/i, optional: true, description: 'Enable debug output' },
      ]
    ]

    args = parse_args(arg_definitions)
    $debug_mode_walkingastro = UserVars.walkingastro_debug || args.debug || false

    settings = get_settings
    @astrology_prediction_skills_survival = settings.astrology_prediction_skills['survival']
    @no_use_scripts = settings.walkingastro_no_use_scripts
    @tele_storage = settings.telescope_storage

    main_loop
  end

  def get_telescope
    case DRCMM.get_telescope(@tele_storage)
    when 'You get a', 'You remove', 'You untie'
      determine_time
    when 'You need a free hand to pick that up.'
      quick_retry
    when 'What were you referring to'
      determine_time if righthand.include?('telescope')
      if lefthand.include?('telescope')
        DRCMM.store_telescope(@tele_storage)
        quick_retry
      end
    when 'You are already holding that.'
      determine_time
    end
  end

  def quick_retry
    pause 20
    get_telescope
  end

  def determine_time
    case DRC.bput('time', 'it is dawn', 'morning', 'midday', 'noon', 'afternoon', 'dusk', 'sunset', 'evening', 'midnight', 'night', 'almost dawn', 'approaching sunrise')
    when 'it is dawn', 'morning', 'midday', 'noon', 'afternoon', 'dusk'
      center('elanthian sun')
    when 'sunset', 'evening', 'midnight', 'night', 'almost dawn', 'approaching sunrise'
      center('heart')
    end
  end

  def center(target)
    case DRCMM.center_telescope(target)
    when "That's a bit tough to do when you can't see the sky", 'Your search for'
      DRCMM.store_telescope(@tele_storage)
    else
      observe
    end
  end

  def observe
    case DRCMM.peer_telescope
    when "You believe you've learned all that you can about survival", 'Too many futures cloud your mind - you learn nothing.'
      waitrt?
      DRCMM.store_telescope(@tele_storage)
      check_predict
    else
      waitrt?
      DRCMM.store_telescope(@tele_storage)
    end
  end

  def check_predict
    return if DRSkill.getxp('Astrology') > 25
    DRCMM.align(@astrology_prediction_skills_survival)
    waitrt?
    DRC.bput('predict future', 'roundtime')
    waitrt?
  end

  def moved_rooms?
    echo "Checking if you've moved rooms..." if $debug_mode_walkingastro
    # Check if the room id or room title has changed.
    # Not all rooms have ids, so we also check the titles.
    # All rooms have titles, but they may be reused in multiple rooms.
    # Checking both the ids and titles gives broadest coverage.
    moved_rooms = false
    if Room.current.id != nil
      moved_rooms = @last_room_id != Room.current.id
    else
      moved_rooms = @last_room_title != DRRoom.title
    end
    if $debug_mode_walkingastro
      echo "--- room_id=#{Room.current.id}"
      echo "--- room_title=#{DRRoom.title}"
      echo "--- last_room_id=#{@last_room_id}"
      echo "--- last_room_title=#{@last_room_title}"
      echo "--- moved_rooms=#{moved_rooms}"
    end
    return moved_rooms
  end

  def can_see_sky?
    # If we didn't see the sky the last time we checked
    # and we're in the same room then don't redundantly check
    # so that we don't spam the game window with weather checks.
    if moved_rooms?
      echo "Moved rooms, checking if we can see sky in this room" if $debug_mode_walkingastro
      @can_see_sky = DRC.can_see_sky?
      @last_room_id = Room.current.id
      @last_room_title = DRRoom.title
    else
      echo "In same room, returning previous answer if we can see the sky: #{@can_see_sky}" if $debug_mode_walkingastro
    end
    return @can_see_sky
  end

  def should_observe?
    @no_use_scripts.none? { |name| Script.running?(name) } && (!lefthand && !righthand) && can_see_sky?
  end

  def main_loop
    loop do
      if should_observe?
        wait_for_script_to_complete('buff', ['walkingastro'])
        get_telescope
        pause 205
      end
      pause 10
    end
  end
end

WalkingAstro.new
