=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#tendme
=end

custom_require.call(%w[common common-healing common-items events])

class TendMe
  def initialize
    arg_definitions = [
      [
        { name: 'train', regex: /train/i, optional: true, description: 'unwrap and rebind wounds for optimum learning' },
        { name: 'monitor', regex: /monitor/i, optional: true, description: 'run in background to keep bleeders tended' }
      ]
    ]
    args = parse_args(arg_definitions)
    waitrt? while bind_open_wounds?
    monitor_health(args.train) if args.monitor
  end

  def bind_open_wounds?
    lowered = false
    # Pause scripts to prevent interference
    until (scripts_to_unpause = DRC.safe_pause_list)
      echo("Cannot pause, trying again in 30 seconds.")
      pause 30
    end

    if checkleft && checkright && DRCI.lower_item?(DRC.left_hand)
      lowered = true
    end

    tended_wounds = false
    health_data = DRCH.check_health
    (
      health_data['lodged'].values.flatten +
      health_data['parasites'].values.flatten +
      health_data['bleeders'].values.flatten
    )
      .select { |wound| wound.tendable? }
      .sort_by { |wound| wound.severity * -1 } # sort descending
      .map { |wound| wound.body_part }
      .uniq
      .each { |body_part| tended_wounds = DRCH.bind_wound(body_part) || tended_wounds }
    DRCI.lift? if lowered
    DRC.safe_unpause_list(scripts_to_unpause)
    return tended_wounds
  end

  # Monitor for wounds to begin bleeding again then tend them.
  def monitor_health(train)
    Flags.add('tendme-new-lodge', /lodges .* in your .*!/)
    Flags.add('tendme-bind-lodged', /You feel a slight pain from the (?<item>.*) lodged in your (?<body_part>.*)\./)
    Flags.add('tendme-bind-wound', /The bandages (?:binding|compressing) your (?<body_part>.*) (?:become|come|soak)/)
    Flags.add('tendme-rewrap-wound', /You feel like now might be a good time to change the (?:bandages|bindings) on your (?<body_part>.*)\./)

    loop do
      pause 0.5
      tend_wounds = false
      # If training, you can rewrap wound for more experience.
      if Flags['tendme-rewrap-wound']
        if train && DRSkill.getxp('First Aid') < 30
          tend_wounds = true
          body_part = Flags['tendme-rewrap-wound'][:body_part]
          Flags.reset('tendme-rewrap-wound')
          DRCH.unwrap_wound(body_part)
        end
      end
      # One or more active bleeders, tend them.
      if Flags['tendme-bind-wound']
        tend_wounds = true
        Flags.reset('tendme-bind-wound')
      end
      # Detected lodged ammo or parasites, tend them out.
      if Flags['tendme-bind-lodged'] || Flags['tendme-new-lodge']
        tend_wounds = true
        Flags.reset('tendme-bind-lodged')
        Flags.reset('tendme-new-lodge')
      end
      if tend_wounds
        bind_open_wounds?
      end
    end
  end
end

before_dying do
  Flags.delete('tendme-bind-wound')
  Flags.delete('tendme-rewrap-wound')
  Flags.delete('tendme-bind-lodged')
  Flags.delete('tendme-new-lodge')
end

TendMe.new
