=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#carve
=end

custom_require.call(%w(common common-crafting))

class Carve
  include DRC
  include DRCC

  def initialize
    settings = get_settings
    @bag = settings.crafting_container('backpack')

    arg_definitions = [
      [
        { name: 'chapter', regex: /\d+/i, variable: true, description: 'Chapter containing the item.' },
        { name: 'recipe_name', display: 'recipe name', regex: /^[A-z\s]+$/i, variable: true, description: 'Name of the recipe, wrap in double quotes if this is multiple words.' },
        { name: 'material', regex: /\w+/i, variable: true, description: 'Type of stone to use.' },
        { name: 'noun', regex: /\w+/i, variable: true }
      ]
    ]

    args = parse_args(arg_definitions)

    @chapter = args.chapter
    @recipe_name = args.recipe_name
    @material = args.material
    @noun = args.noun

    carve_item
  end

  def get_or_fail(item)
    waitrt?
    case bput("get my #{item}", '^You get', '^You are already', '^You pick up', '^What do you', '^What were you')
    when 'What do you', 'What were you'
      echo("You seem to be missing: #{item}")
      exit
    end
  end

  def store_thing(item)
    waitrt?
    bput("put my #{item} in my #{@bag}", 'You put your', 'What were you referring to')
  end

  def turn_to(section)
    bput("turn my book to #{section}", 'You turn your', 'The book is already')
  end

  def carve_item
    get_or_fail('carving book')
    turn_to("chapter #{@chapter}")
    turn_to("page #{find_recipe(@chapter, @recipe_name)}")
    bput('study my book', 'Roundtime')
    store_thing('book')
    get_or_fail('chisel')
    get_or_fail("#{@material} rock")
    carve('cut my rock with my chisel')
  end

  def carve(command)
    waitrt?
    case bput(command,
              'rough, jagged edges',
              'determine it is no longer level',
              'developed an uneven texture along its surface',
              # 'Applying the final touches',
              'You cannot figure out how to do that.',
              'you see some discolored areas',
              'Roundtime')
    when 'rough, jagged edges'
      waitrt?
      store_thing(checkright)
      get_or_fail('rifflers')
      command = "rub my #{@noun} with my rifflers"
    when 'determine it is no longer level', 'developed an uneven texture along its surface'
      waitrt?
      store_thing(checkright)
      get_or_fail('rasp')
      command = "rub my #{@noun} with my rasp"
    when 'you see some discolored areas'
      waitrt?
      store_thing(checkright)
      get_or_fail('polish')
      command = "apply my polish to my #{@noun}"
    # when 'Applying the final touches'
    when 'You cannot figure out how to do that.'
      finish
    else
      waitrt?
      store_thing(checkright) unless checkright == 'chisels'
      get_or_fail('chisels') unless checkright == 'chisels'
      command = "cut my #{@noun} with my chisels"
    end
    waitrt?
    carve(command)
  end

  def finish
    waitrt?
    store_thing(checkright)
    # NOTE: using 2 volume recipes leaves no leftover material when ordering a small rock
    # fput("get my #{@material} lumber")
    # fput("put my #{@material} lumber in my #{@bag}")
    exit
  end
end

Carve.new
