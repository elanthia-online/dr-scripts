=begin
  Search a deed register for the specified crafting material.
  Output all lines that match.
=end

custom_require.call(%w[common common-items drinfomon])

class Register
  include DRC
  include DRCI

  def initialize
    settings = get_settings
	@search_results = []

    arg_definitions =
      [
        [
          { name: 'query', regex: /^[A-z\s\-\']+$/i, description: 'crafting material to search for, use quotes for multiple words' }
        ]
      ]

    args = parse_args(arg_definitions)

    if args.query
      stow_hands
	  if get_item('deed register', get_settings.crafting_container)
	    fput("turn my register to contents")
        search(args.query)
	  else
	    echo "Can\'t find your deed register."
		exit
	  end
      stow_hands
	end
	respond('   ' + "Results:")
	if @search_results.any?
	  display_results(@search_results)
	else
	  respond('   ' + "No matches found.")
	end
  end

  def display_results(results)
    results.each do |data|
      respond("#{data}")
    end
  end

  def search(query)
    contents = []
    fput("read my register")
    pause
    loop do
	  line = get?
	  if line.match("You haven't stored any deeds in this register.")
	    contents << "   There are no deeds in your register."
		break
	  end
	  if line.match("You shouldn't read somebody else's deed book.")
	    contents << "   This is not your deed register!"
		break
	  end
	  if line.match(/\W#{query}\W/i)
	    contents << line
	  end
	  if line.match("Maximum:  ")
	    break
	  end
	end
	@search_results = contents
  end
  
end

Register.new
