=begin
 
=end
 
custom_require.call(%w[common common-items common-arcana drinfomon])
 
class CarveLockpicks
  include DRC
  include DRCI
  include DRCA
 
  ######################## SETUP ACTIONS ########################
 
  def check_carving_knife()
    if GameObj.right_hand.name != 'carving knife'
      fput('swap') if GameObj.right_hand.noun == 'keyblank'
      stow_hand('right') if GameObj.right_hand.name != 'Empty'
      result = bput('get my carving knife', 'You get', 'What were you', 'I could not find')
      exit if result != 'You get'
    end
  end
   
  def check_keyblank()
    fput("get my keyblank")
    pause 1
    return if GameObj.left_hand.noun == 'keyblank'
    exit if GameObj.left_hand.noun != 'keyblank'
    #stow_hand('left') if GameObj.left_hand.name != 'Empty'
    #buy_item(@carving_location, @keyblank_type)
    carve_lockpick
  end
 
  def check_buffs()
    activate_khri?(@kneel_khri, 'Khri Focus')
    activate_khri?(@kneel_khri, 'Khri Safe')
    activate_khri?(@kneel_khri, 'Khri Sight')
	activate_khri?(@kneel_khri, 'khri Flight')
  end
 
  def check_goal()
    exit if @grandmaster_counter >= @grandmaster_goal
  end
 
  ######################## CARVING ACTIONS ########################
 
  def carve_lockpick()
    check_goal()
    check_carving_knife()
    check_keyblank()
    check_buffs()
    carve_loop()
  end
 
  def carve_loop()
    item = GameObj.left_hand.noun
    carve_lockpick if item == 'Empty'
    case bput("carve my #{item}", 'Roundtime', 'feel your knife slip and', 'It would be better to', 'You are too injured', 'you carve "Majorly" into the side')
    when 'Roundtime'
      carve_loop
    when 'feel your knife slip and'
      carve_lockpick
    when 'It would be better to'
      stow_lockpick
    when 'you carve "Aruthas Silvershire" into the side'
      @signed_pick = 1
      stow_lockpick
    else
      exit
    end
  end
 
  ######################## STOWING ACTIONS ########################
 
  def stow_lockpick()
    echo("  @signed_pick: #{@signed_pick}")
    case bput('glance my lockpick', /You glance at a (.*) lockpick/)
    when /You glance at a (.*) lockpick/
      quality = Regexp.last_match(1)
    end
    if /grand/.match(quality) != nil then
      if @signed_pick == 0
        fput('put my lockpick in my cloak')
      else
        fput('put my lockpick in my backpack')
      end
      bput('stow my knife', 'You put your')
      @grandmaster_counter = @grandmaster_counter + 1
    elsif /master/.match(quality) != nil then
      fput('put my lock in back')
      @master_counter = @master_counter + 1
    end
    echo('***CARVING COMPLETE ***')
    echo("Lockpick Type:            #{quality}")
    echo("Grandmaster Lockpicks:    #{@grandmaster_counter}")
    echo("Master Lockpicks:         #{@master_counter}")
    @signed_pick = 0
    carve_lockpick()
  end
 
  ##################### INITIALIZE #####################
 
  def initialize
    settings = get_settings
    exit if DRStats.thief? == false
    @carving_location = 12207
    @keyblank_type = 'soft iron keyblank'
    @kneel_khri = settings.kneel_khri
    @hometown = settings.hometown
    @grandmaster_ring = 'steel lockpick ring'
    @grandmaster_ring_storage = 'carryall'
    @master_ring = 'iron lockpick ring'
    @master_ring_storage = 'back'
    @grandmaster_counter = 0
    @master_counter = 0
    @grandmaster_goal = 50
    @signed_pick = 0
    carve_lockpick()
   
  end
end
 
CarveLockpicks.new