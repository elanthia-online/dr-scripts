custom_require.call(%w(common common-travel))

class Athletics
  
  include DRC
  include DRCT
  
  def initialize
    @did_play = false
    @no_instrument = false
    @settings = get_settings()
    @athletics_options = get_data('athletics').athletics_options
    @song_list = get_data('perform').perform_options
 
    Flags.add('ct-song', 'you finish playing')
    play_song?
    
    @start_skill=DRSkill.getxp('Athletics')
    @end_skill=@start_skill+20
    if(@end_skill>30)
      @end_skill=30
    end

    if @settings.hometown == 'Crossing' || @settings.hometown == 'Riverhaven'
      crossing_athletics
    elsif @settings.hometown == 'Shard'
      if DRSkill.getrank('Athletics') <= 250
        shard_athletics
      else
        if DRSkill.getrank('Stealth') >= 250
          climb_practice(19460,"wall",true)
        else
          hib_athletics
        end
      end
    elsif @settings.hometown == 'Hibarnhvidar'
      hib_athletics
    elsif @settings.hometown == 'Ratha'
      ratha_athletics
    end
  end
  
  def crossing_athletics
    if DRSkill.getrank('Athletics') >= 400
      return if @researching
      climb_branch
    else
      while DRSkill.getxp('Athletics') < @end_skill
        @athletics_options
          .reject { |data| @settings.avoid_athletics_in_justice && data['justice'] }
          .each do |data|
            break unless climb?(data['room'], data['targets'])
        end
      end
    end
  end
  
  def shard_athletics
    while DRSkill.getxp('Athletics') <= @end_skill
      walk_to(11481)
      walk_to(11482)
      walk_to(11483)
    end    
    
    walk_to(@settings.safe_room)
  end
  
  def hib_athletics
    walk_to(4155)
    move('nw')
    
    while DRSkill.getxp('Athletics') <= @end_skill
      fput('climb bank')
      3.times do
        fput('south')
        waitrt?
      end 
      walk_to(4155)
      move('nw')
    end
    fput('climb bank')
    waitrt?
    walk_to(@settings.safe_room)
  end
  
  def ratha_athletics
    while DRSkill.getxp('Athletics') <= @end_skill
      if DRSkill.getrank('Athletics') <= 185
        climb_practice(5287, 'rock gorge',true)
      else
	    if DRSkill.getrank('Stealth') >= 130
	      climb_practice(5143, 'deep crack',true)
		end
      end
    end
  end
  
  def climb_practice(room, target, to_hide = false)
    return unless target
    walk_to(room)
    play_song?
    while DRSkill.getxp('Athletics') <= @end_skill
      retreat
      if to_hide
        attempts_to_hide = 5
        while attempts_to_hide > 0
          break if hide?
          attempts_to_hide -= 1
        end
        return if attempts_to_hide.zero?
      end
      Flags.add('ct-climbing-finished', 'You finish practicing your climbing')
      Flags.add('ct-climbing-combat', 'You are engaged in combat')
      bput("climb practice #{target}", 'You begin to practice ')
      loop do
        pause 1
        break if Flags['ct-climbing-finished']
        return if Flags['ct-climbing-combat']
        if DRSkill.getxp('Athletics') > @end_skill
          fput('stop climb')
          break
        end
      end
    end
    stop_play
    bput('unhide', 'You come out of hiding', 'You slip out of hiding', 'But you are not')
    walk_to(@settings.safe_room)
  end
  
  def climb?(room, targets)
    targets.each do |target|
      walk_to(room)
      return true if DRRoom.npcs.length >= 3

      fput "climb #{target}"
      pause
      waitrt?
      return false if DRSkill.getxp('Athletics') >= @end_skill
    end
    true
  end
  
  def play_song?(blocking = false)
    UserVars.song = @song_list.first.first unless UserVars.song
    @did_play = true
    case bput("play #{UserVars.song}", 'dirtiness may affect your performance', 'slightest hint of difficulty', 'You begin a', 'You struggle to begin', 'You\'re already playing a song', 'You effortlessly begin', 'You begin some', 'You cannot play', 'Play on what instrument', 'now isn\'t the best time to be playing', 'Perhaps you should find somewhere drier before trying to play')
    when 'Play on what instrument'
      @no_instrument = true
      return false
    when 'now isn\'t the best time to be playing', 'Perhaps you should find somewhere drier before trying to play'
      return true
    when 'dirtiness may affect your performance'
      if DRSkill.getrank('Performance') < 20
        echo "Skipping cleaning of zills due to low rank of Performance: #{DRSkill.getrank('Performance')}"
        return true
      end
      stop_play
      clean_zills
      return play_song?
    when 'You begin a', 'You effortlessly begin', 'You begin some'
      stop_play
      UserVars.song = @song_list[UserVars.song] || @song_list.first.first
      return play_song?
    when 'You struggle to begin'
      if UserVars.song != @song_list.first.first
        stop_play
        UserVars.song = @song_list.first.first
        return play_song?
      end
    end
 
    return true unless blocking
 
    Flags.reset('song')
    pause 1 until Flags['song']
    true
  end
 
  def clean_zills
    cloth = @settings.cleaning_cloth
    bput('remove my zills', 'You slide')
    bput("get my #{cloth}", 'You get')
 
    loop do
      case bput("wipe my zills with my #{cloth}", 'Roundtime', 'not in need of drying', 'You should be sitting up')
      when 'not in need of drying'
        break
      when 'You should be sitting up'
        fix_standing
        next
      end
      pause 1
      waitrt?
 
      until /you wring a dry/i =~ bput("wring my #{cloth}", 'You wring a dry', 'You wring out')
        pause 1
        waitrt?
      end
    end
 
    until /not in need of cleaning/i =~ bput("clean my zills with my #{cloth}", 'Roundtime', 'not in need of cleaning')
      pause 1
      waitrt?
    end
 
    bput('wear my zills', 'You slide')
    bput("stow my #{cloth}", 'You put')
  end
 
  def stop_play
    return unless @did_play
    return if @no_instrument
    @did_play = false
    bput('stop play', 'You stop playing your song', 'In the name of', "But you're not performing")
    Flags['song'] = true
  end
  
end
before_dying do
  DRC.bput('stop climb','.*')
end

Athletics.new