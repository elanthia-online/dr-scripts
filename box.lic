custom_require.call(%w[common common-travel drinfomon])

def count_boxes(container=nil)
    # The negative look ahead ignores the term 'boxes' which is output by the rummage /b command
    box_nouns_re = /#{Regexp.union(get_data('items').box_nouns)}(?!es)/

    if container
      contents = DRC.bput("rummage /b #{container}", '^You rummage .*')
      return contents.scan(box_nouns_re).size
    else
      return DRRoom.room_objs.count { |item| box_nouns_re =~ item }
    end
end

box_nouns = /#{Regexp.union(get_data('items').box_nouns)}(?!es)/
safe_room = get_settings.safe_room
loop do 
  while Room.current.id == safe_room && count_boxes > 0
    fput('stow box')
    exit if checkleft =~ box_nouns || checkright =~ box_nouns
  end
  pause 5
end