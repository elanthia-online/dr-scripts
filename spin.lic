=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#spin
=end

custom_require.call(%w(common common-items common-money common-travel common-crafting))

arg_definitions = [
  [
    { name: 'material', options: %w(burlap silk), description: 'fiber to spin' },
    { name: 'weight', options: %w(fine thin average thick heavy yarn), optional: true, description: 'Thickness, defaults to heavy' }
  ]
]
args = parse_args(arg_definitions)

mat_data = {
  'silk' => { name: 'silk', index: 1, cost: 187, count: 13 },
  'burlap' => { name: 'burlap', index: 5, cost: 201, count: 4 }
}

data = mat_data[args.material]

DRCM.ensure_copper_on_hand(data[:cost] * data[:count], get_settings.hometown)

data[:count].times do
  stock_room = get_data('crafting')['tailoring'][get_settings.hometown]['stock-room']
  DRCI.order_item(stock_room, data[:index])
  fput('combine fiber with fiber')
end

DRCC.find_wheel(get_settings.hometown)

fput('put fiber on wheel')
fput("adjust wheel to #{args.weight || 'heavy'}")

until checkleft || checkright
  waitrt?
  case DRC.bput('spin wheel', 'shade', 'twist\b', 'bunch', 'slide', 'roundtime', 'Individual strands of the fiber begin twisting')
  when 'shade'
    pause
    waitrt?
    fput('clean wheel')
  when 'twist', 'Individual strands of the fiber begin twisting'
    pause
    waitrt?
    fput('turn wheel')
  when 'bunch', 'slide'
    pause
    waitrt?
    fput('push wheel')
  else
    pause
    waitrt?
  end
end

fput("stow my #{checkright || checkleft}")
