=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#attunement
=end

custom_require.call(%w(common common-travel drinfomon))

class Attunement
  include DRC
  include DRCT

  def initialize
    arg_definitions = [
      [
        { name: 'stationary',  regex: /stationary/i, optional: true, description: 'dont power walk' }
      ]
    ]
    
    args = parse_args(arg_definitions)
  
    settings = get_settings
    @stationary_skills_only = settings.crossing_training_stationary_skills_only
    @hometown = settings.hometown
    @stationary = args.stationary
    @perc_self = settings.perc_self
    train_attunement
  end

  def train_attunement
    if DRStats.moon_mage?
      fput('perc mana')
      pause 15
      waitrt?
      return
    end

    room_list = if @stationary_skills_only || DRStats.necromancer? || @stationary
                  [Room.current.id]
                else
                  get_data('town')[@hometown]['attunement_rooms']
                end

    start_timer = Time.now
    
    if @perc_self
      bput('perc self', 'You don\'t sense any', 'You sense') 
      waitrt?
    end
    
    room_list.each do |room_id|
      walk_to(room_id)
      bput('perc', 'You reach out')
      waitrt?
      break if DRSkill.getxp('Attunement') >= 30 || start_timer - Time.now > 90
    end
  end
end

# Call this last to avoid the need for forward declarations
Attunement.new
