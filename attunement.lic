=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#attunement
=end

custom_require.call(%w[common common-arcana common-travel drinfomon])

class Attunement
  include DRC
  include DRCA
  include DRCT

  LUNAR_PERCEIVE_COMMANDS = ['mana', 'moons', 'planets']

  def initialize
    settings = get_settings
    @stationary_skills_only = settings.crossing_training_stationary_skills_only
    @hometown = settings.hometown
    @attunement_rooms = settings.attunement_rooms
    @exp_max_threshold = settings.crossing_training_max_threshold
    @exp_target_increment = settings.attunement_target_increment
    @exp_start_mindstate = DRSkill.getxp('Attunement')
    @exp_stop_mindstate = get_target_mindstate(@exp_start_mindstate, @exp_target_increment, @exp_max_threshold)
    @lunar_perceive_index = -1
    train_attunement(settings)
  end

  # Determines the target mind state to train to
  # based on the starting value of `mindstate` and
  # a target goal of increasing by `increment` without
  # exceeding a max mind state of `threshold`.
  def get_target_mindstate(mindstate, increment, threshold)
    mindstate + [increment, [threshold - mindstate, 0].max].min
  end

  def is_lunar_mage?
    DRStats.moon_mage? || DRStats.trader?
  end

  def get_next_lunar_perceive_index
    @lunar_perceive_index = (@lunar_perceive_index + 1) % LUNAR_PERCEIVE_COMMANDS.length
  end

  def get_perceive_command
    if is_lunar_mage?
      "perceive #{LUNAR_PERCEIVE_COMMANDS[get_next_lunar_perceive_index]}"
    else
      "perceive"
    end
  end

  def get_rooms
    if @stationary_skills_only || is_lunar_mage?
      [Room.current.id]
    elsif !@attunement_rooms.empty?
      @attunement_rooms
    else
      get_data('town')[@hometown]['attunement_rooms']
    end
  end

  def done_training?
    DRSkill.getxp('Attunement') >= @exp_stop_mindstate
  end

  def train_attunement(settings)
    room_list = get_rooms
    until done_training?
      # If we keep looping, ensure buffs stay active
      DRCA.do_buffs(settings, 'attunement')
      room_list.each do |room_id|
        walk_to(room_id)
        bput(get_perceive_command, 'You reach out', 'Roundtime')
        waitrt?
        break if done_training?
      end
    end
  end

end

Attunement.new
