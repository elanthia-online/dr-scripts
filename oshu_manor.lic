custom_require.call(%w(common common-travel drinfomon))

class Oshu
  include DRC
  include DRCT

  def initialize
    settings = get_settings
    @ignored_npcs = settings.ignored_npcs
    @waiting_room = 2317
    @graves = [2334, 2337, 2338, 2317]
    @grexits = [2356, 2349, 2347]
    Flags.add('allready', "The gargoyle head doesn't budge.")
    Flags.add('blasted', "The blast catches you fully and sends you careening northward through the air!")
    Flags.add('head-reset', 'A stone gargoyle head suddenly makes a series of loud grinding')
    Flags.add('grave_exit', 'You dig to the surface')
    Flags.add('retreat', 'closes to pole weapon range on you', 'closes to melee range on you', 'begins to advance on you', 'advances from nearby and is closing steadily' )
    grave_digger
  end
  
  def germfree?
    return (DRRoom.npcs - @ignored_npcs).empty?
  end

  def through?
    return unless Flags['grave_exit']
    Flags.reset('grave_exit')
    DRC.fix_standing
    puzzle_begin
  end

  def retreat?
    return unless Flags['retreat']
    until 'You are already as far away as you can' == DRC.bput('retreat', 'You are already as far away as you can', 'You retreat', 'You stop', 'Roundtime' )
      pause 0.2
    end
    Flags.reset('retreat')
  end
    
  def grave_digger
    @graves.each do |grave|
      if Room.current.id.to_i != grave 
        walk_to(grave)
      end
      break if germfree?
    end
    grave_digger if Room.current.id.to_i == 2317
    fput("dig grave")
    waitrt?
    loop do
      break if @grexits.any? { |exit| Room.current.id.to_i == exit }
      retreat? unless germfree?
      through?
      pause 0.5
    end
    puzzle_begin
  end
    
  def puzzle_begin
    walk_to(2350)
    bput('push statue', 'and it settles into its new position with a click', 'The granite statue has already been pushed')
    walk_to(2340)
    fput('go house')
    fput('south')
    head_game
  end

  def blasted?
    return unless Flags['blasted']
    Flags.reset('blasted')
    fix_standing
    fput("south")
  end

  def head_reset?
    return unless Flags['head-reset']
    Flags.reset('head-reset')
    head_game
  end

  def waitandcheck
    pause
    waitrt?
    blasted?
    head_reset?
  end

  def head_game
    fput'look head'
    pause 1
    last_lines = reget(20)
      .flatten
    gotfire = last_lines.any? {|line| line.include?("the crooked nose of the gargoyle head is pointed towards the word \"Fire.\"")}
    unless gotfire
      head_turner('Fire')
    end
    waitandcheck
    bput('push claw', 'claw is already pushed up as far as it will', 'and it clicks into place')
    waitandcheck
    bput('push head', 'The gargoyle head shudders as something inside grinds into', 'Roundtime')
    waitandcheck
    head_turner('Exchange')
    waitandcheck
    bput('pull claw', ' as far as it will', 'and it clicks into place')
    waitandcheck
    bput('push head', 'The gargoyle head shudders as something inside grinds into', 'Roundtime')
    waitandcheck
    head_turner('Poison')
    waitandcheck
    bput('push claw', 'claw is already pushed up as far as it will', 'and it clicks into place')
    waitandcheck
    bput('push head', 'The gargoyle head shudders as something inside grinds into', 'Roundtime')
    waitandcheck
    fput("pull lever")
    gtfo
  end

  def open?
    return unless Flags['allready']
    Flags.reset('allready')
    gtfo
  end
  
  def head_turner(word)
    waitrt?
    open?
    bput('turn head', 'Roundtime', "The gargoyle head doesn't budge.")
    wordlist = reget(4)
      .flatten
    head_turner(word) unless wordlist.any? {|line| line.include?("You grab the gargoyle head and wrestle it around until it points at the word \"#{word}.\"")}
  end  

  def gtfo
    fput"north"
    fput"go door"
    pause 1
    unless Room.current.id.to_i == 2340
      fput"south"
      fput"pull lever"
      gtfo
    end
    walk_to(2345)
    fput"go door"
    exit
  end
end

Oshu.new
