=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#outdoorsmanship
=end

custom_require.call(%w[common common-items drinfomon])

class Outdoorsmanship
  include DRC
  include DRCI

  def initialize
    arg_definitions = [
      [
        { name: 'mindstates', regex: /\d+/, optional: true, description: 'Number of mindstates or collection attempts to perform before exiting. Defaults to 3' },
        { name: 'collect_item', regex: /\w+/i, optional: true, description: 'Item to collect. Will use forage_item if not set' }
      ]
    ]
    args = parse_args(arg_definitions)

    settings = get_settings
    
    @targetxp = 3
    @targetxp = args.mindstates.to_i if args.mindstates
    
    if args.collect_item
      @forage_item = args.collect_item
    else
      @forage_item = settings.forage_item
    end

    start_exp = DRSkill.getxp('Outdoorsmanship')
    @end_exp = [start_exp + @targetxp, 29].min

    train_outdoorsmanship
  end

  def train_outdoorsmanship
    attempt = 0   # Failsafe counter to prevent an infinite loop if item isn't collectable in the room
    while DRSkill.getxp('Outdoorsmanship') < @end_exp and attempt < @targetxp
      if DRSkill.getrank('Outdoorsmanship') < 20
        forage?('rock')
        dispose_trash 'rock'
      else
        item = @forage_item
        collect(item)
        waitrt?
        kick_pile? unless kick_pile?("#{item}s")
      end
      attempt += 1
    end
  end
end

# Call this last to avoid the need for forward declarations
Outdoorsmanship.new
