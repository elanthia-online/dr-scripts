=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#makesteel
=end

custom_require.call(%w[common common-crafting common-items common-money common-travel drinfomon])

class MakeSteel
  def initialize
    arg_definitions = [
      [
        { name: 'count', regex: /^(0?[1-9]|1[0-9]|2[0-1])$/, description: 'Number of iron ingots to smelt. (e.g. 1-21)' },
        { name: 'type', options: %w[l m h], optional: true, description: 'Carbon content, defaults to high' },
        { name: 'refine', regex: /refine/i, optional: true, description: 'If provided, refine the resulting ingot' }
      ]
    ]

    args = parse_args(arg_definitions)
    total_count = args.count.to_i
    type = args.type || 'h'
    @settings = get_settings
    @hometown = @settings.force_crafting_town || @settings.hometown
    @stock_room = get_data('crafting')['blacksmithing'][@hometown]['stock-room']

    DRCM.ensure_copper_on_hand(2000 * total_count, @settings, @hometown)

    smelt_ingot(total_count, type)

    refine if args.refine
  end

  def refine
    DRCT.order_item(get_data('crafting')['blacksmithing'][@hometown]['finisher-room'], 9) unless DRCI.exists?('flux')
    DRCC.find_empty_crucible(@hometown)
    DRCI.get_item('steel ingot')
    DRC.bput('put my steel ingot in crucible', /You put your.*in the.*crucible\./)
    DRC.wait_for_script_to_complete('smelt', ['refine'])
    DRCI.stow_item?('ingot')
  end

  def smelt_ingot(count, type)
    count.times do
      order_stow(7)
      order_stow(2)
      order_stow(2) if %w[m h].include?(type)
      order_stow(2) if type == 'h'
    end

    DRCC.find_empty_crucible(@hometown)

    multiplier = case type
                 when 'l'
                   1
                 when 'm'
                   2
                 when 'h'
                   3
                 end

    (count * multiplier).times do
      DRCI.get_item('coal nugget')
      case DRC.bput('put my nugget in crucible', /You put your.*in the.*crucible\./, /You decide that smelting such a volume of metal at once would be dangerous/)
      when /You decide that smelting such a volume of metal at once would be dangerous/
        DRC.message("*** An error has occurred, too much metal in crucible. ***")
        exit
      end
    end

    count.times do
      DRCI.get_item('iron nugget')
      case DRC.bput('put my nugget in cruc', /You put your.*in the.*crucible\./, /You decide that smelting such a volume of metal at once would be dangerous/)
      when /You decide that smelting such a volume of metal at once would be dangerous/
        DRC.message("*** An error has occurred, too much metal in crucible. ***")
        exit
      end
    end

    DRC.wait_for_script_to_complete('smelt')
    DRCI.stow_item?('ingot')
  end

  def order_stow(num)
    DRCT.order_item(@stock_room, num)
    DRCI.stow_item?('nugget')
  end
end

MakeSteel.new
