=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#slackbot
=end

require 'http'

class SlackBot
  def initialize
    first_time_msg = UserVars.slack_token.nil?
    @api_url = 'https://slack.com/api/'
    @lnet = (Script.running + Script.hidden).find { |val| val.name == 'lnet' }
    find_token unless authed?(UserVars.slack_token)
    @dm_channel = get_dm_channel(get_settings.slack_username)
    direct_message("Setup was a success!") if first_time_msg
  end

  def authed?(token)
    res = HTTP.post("#{@api_url}/auth.test", params: { token: token })
    body = JSON.parse(res.body)
    body['ok']
  end

  def request_token(lichbot)
    ttl = 10
    send_time = Time.now
    @lnet.unique_buffer.push("chat to #{lichbot} RequestSlackToken")
    loop do
      line = get
      pause 0.05
      return false if Time.now - send_time > ttl
      case line
      when /\[Private\]-.*:#{lichbot}: "slack_token: (.*)"/
        msg = Regexp.last_match(1)
        return msg != "Not Found" ? msg : false
      when /\[server\]: "no user .*/
        return false
      end
    end
  end

  def find_token
    lichbots = %w(Theano Roobeelitch)
    echo "Looking for a token..."
    for bot in lichbots
      token = request_token(bot)
      authed = authed?(token) if token
      UserVars.slack_token = token if authed
      return if authed
    end
    echo "Unable to locate a token :["
    exit
  end

  def direct_message(message)
    return unless @dm_channel

    HTTP.post("#{@api_url}/chat.postMessage", params: { token: UserVars.slack_token, channel: @dm_channel, text: message, as_user: true })
  end

  def get_dm_channel(username)
    res = HTTP.post("#{@api_url}/users.list", params: { token: UserVars.slack_token })
    users_list = JSON.parse(res.body)
    user = users_list['members'].find { |u| u['name'] == username }
    user['id']
  end
end
