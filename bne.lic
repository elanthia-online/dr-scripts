=begin

Very simple BnE script.  Use at your own risk - there are VERY high fines if you get caught

yaml settings examples:

bne_settings:
  room: nnnn            # room id that bne should be done in.  Guards should never come to this room, so pick carefully
  entry_type: loxkpick  # entry method - rope or lockpick.  must have a heavy rope if using rope.  if using lockpick, it will use use_lockpick_ring/lockpick_container settings
  search_count: 0       # futue develpment, not supported right now
  dispose: false        # futue develpment, not supported right now , when supproted will use stealing_bag for goods

=end

custom_require.call(%w[common common-travel common-items])

class BNE
  include DRC
  include DRCT
  include DRCI

  def initialize
    start_script('jail-buddy') unless Script.running?('jail-buddy')
    @settings = get_settings
    @bne_settings = @settings.bne_settings
    burgle
  end

  def burgle
    #check to make sure you aren't under cool down
    return unless /The heat has died down from your last caper/ =~ DRC.bput('burgle recall', '^You should wait at least \d+ roisaen for the heat to die down.', '^The heat has died down from your last caper')

    #get to your defined room:
    walk_to(@bne_settings['room'])

    #check for entry method
    case @bne_settings['entry_type']
    when /rope/
      if bput('get my heavy rope', 'You get', 'You are already holding' ,'What were you') =~ /What were you/
        message("Couldn't find entry item: heavy rope")
        return
      end
    when /lockpick/
      if @settings.use_lockpick_ring
        if !exists?("lockpick #{@settings.lockpick_container}")
          message("Couldn't find entry item: lockpick #{@settings.lockpick_container}")
          return
        end
      elsif bput('get my lockpick', 'You get', 'You are already holding' ,'What were you') =~ /What were you/
        message("Couldn't find entry item: lockpick")
        return
      end
    else
      message("Unknown entry method: #{@bne_settings['entry_type']}")
      return
    end
    #setup your buffs for bne
    wait_for_script_to_complete('buff', ['bne']) if @settings.waggle_sets['bne']

    #ensure you're in hiding or invis before starting
    if !invisible?
      hide_attemps = 3
      until hide?
        hide_attemps -= 1
        if hide_attemps <= 0
          message("Couldn't hide.  Find a better room.")
          return
        end
      end
    end
    bput('burgle', 'You make short work of the lock', 'You scale up the side of a wall')
      #for each room_list  - tbd
    fput('go window')
  end

end
BNE.new
