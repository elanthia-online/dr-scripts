# quiet
=begin
  Suggestions and contributions are welcome: https://github.com/rpherbig/dr-scripts

  Automatic wound tender, on start checks target for bleeding wounds and tends them, then watches for messages to unbind or retend wounds.

  ;tendother name

  To stop tending:
  ;k tendother
=end

custom_require(%w(common drinfomon))

def bind_open_wounds(target)
  fput("look #{target}")
  pause 2
  bleeders = reget(20).keep_if { |item| item =~ /^\w+ is bleeding/ }.last
  bleeders = bleeders.scan(/ from the (left \w+|right \w+|\w+)/).to_a.flatten
  bleeders.each { |message| DRC.bind_wound(message, target) }
end

target = DRRoom.pcs.find { |name| /^#{variable[1]}/i =~ name }

bind_open_wounds(target)

while line = script.gets
  case line
  when /The bandages binding #{target}'s (.*) come loose and you begin to bleed even more/
    DRC.bind_wound(Regexp.last_match(1), target)
  when /The bandages binding #{target}'s (.*) soak through with blood as it begins bleeding again/i
    DRC.bind_wound(Regexp.last_match(1), target)
  end
  begin
  rescue Exception
    echo $ERROR_INFO
    echo $ERROR_INFO.backtrace.first
    sleep 1
  rescue ThreadError
    echo $ERROR_INFO
    echo $ERROR_INFO.backtrace.first
    sleep 1
  rescue
    echo $ERROR_INFO
    echo $ERROR_INFO.backtrace.first
    sleep 1
  end
end
