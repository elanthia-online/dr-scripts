=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#reportbot
=end

class Reportbot
  def initialize
    @bad_words = get_data('bad-words').bad_words
    echo("Initialized bad words; count: #{@bad_words.count}")

    fput('avoid !all')
  end

  def check_player(player)
    echo "checking player: #{player}"
    min_word = ''
    min_distance = 50
    @bad_words.each do |word|
      distance = levenshtein_distance(player, word)
      if distance < min_distance
        min_distance = distance
        min_word = word
      end
    end

    # TODO: The threshold here should really be a parameter to the distance function,
    #       so it can short circuit instead of running all possibilities
    #       Consider something like min_word = @bad_words.min { |word| levenshtein_distance(player, word) }
    return unless min_distance < 3
    echo "player: #{player}, word: #{min_word}, distance: #{min_distance}"
  end

  # TODO: Consider adding caching
  def levenshtein_distance(s, t)
    m = s.length
    n = t.length
    return m if n.zero?
    return n if m.zero?
    d = Array.new(m + 1) { Array.new(n + 1) }

    (0..m).each { |i| d[i][0] = i }
    (0..n).each { |j| d[0][j] = j }
    (1..n).each do |j|
      (1..m).each do |i|
        d[i][j] = if s[i - 1] == t[j - 1] # adjust index into string
                    d[i - 1][j - 1]       # no operation required
                  else
                    [d[i - 1][j] + 1, # deletion
                     d[i][j - 1] + 1, # insertion
                     d[i - 1][j - 1] + 1] # substitution.min
                  end
      end
    end
    d[m][n]
  end
end

arg_definitions = [
  [
    { name: 'start', regex: /start/i, description: 'Required: prevents accidentally starting up reportbot' }
  ]
]

parse_args(arg_definitions)

start_script('playermonitor')
pause 1 until UserVars.players_online

reportbot = Reportbot.new
whitelist = load_reportbot_whitelist
echo whitelist

loop do
  (UserVars.players_online - whitelist)
    .each do |player|
      reportbot.check_player(player)
      whitelist << player
      save_reportbot_whitelist(whitelist)
    end

  pause 60
end
